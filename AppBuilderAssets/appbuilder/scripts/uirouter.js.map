{"version":3,"sources":["webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/rejectFactory.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/glob.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/queue.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/strings.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/safeConsole.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/trace.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/params/paramType.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/params/param.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/params/paramTypes.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/params/stateParams.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/path/pathNode.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/targetState.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/path/pathUtils.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/resolve/interface.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/resolve/resolvable.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/resolve/resolveContext.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/stateBuilder.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/interface.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/stateObject.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/stateMatcher.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/stateQueueManager.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/stateRegistry.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/transitionHook.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/hookRegistry.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/hookBuilder.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/transition.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlMatcher.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlMatcherFactory.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlRule.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlRouter.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlRules.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/view/view.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/globals.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlConfig.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/url/urlService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/router.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/coreResolvables.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/redirectTo.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/onEnterExitRetain.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/resolve.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/views.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/updateGlobals.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/url.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/lazyLoad.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/transitionEventType.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/ignoredTransition.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/hooks/invalidTransition.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/transition/transitionService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/state/stateService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/q.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/injector.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/utils.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/baseLocationService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/hashLocationService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/pushStateLocationService.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationConfig.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/browserLocationConfig.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/vanilla/plugins.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/interface.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/coreservices.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/angular.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/statebuilders/views.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/templateFactory.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/stateProvider.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/statebuilders/onEnterExitRetain.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/locationServices.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/urlRouterProvider.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/services.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/directives/stateDirectives.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/directives/viewDirective.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/stateFilters.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/viewScroll.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angularjs/lib-esm/index.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/rx/lib-esm/ui-router-rx.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/common.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angular-hybrid/fesm5/uirouter-angular-hybrid.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/predicates.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/angular/fesm5/uirouter-angular.js","webpack:///D:/Program Files (x86)/Jenkins/workspace/APPBUILDER-MONGOOSE-CLIENT-2-BUILD/server/server-gar/node_modules/@uirouter/core/lib-esm/common/hof.js"],"names":["RejectType","Glob","text","this","glob","split","regexpString","map","seg","join","regexp","RegExp","is","exec","fromString","prototype","matches","name","test","Queue","_items","_limit","_evictListeners","onEvict","enqueue","item","items","push","length","evict","shift","forEach","fn","dequeue","size","splice","clear","current","remove","idx","indexOf","peekTail","peekHead","Rejection","type","message","detail","$id","isRejectionPromise","obj","then","_transitionRejection","superseded","options","rejection","SUPERSEDED","redirected","invalid","INVALID","ignored","IGNORED","aborted","ABORTED","errored","ERROR","normalize","toString","d","Object","stringify","toPromise","maxLength","max","str","substr","padString","kebobString","camelCase","replace","$1","toLowerCase","functionToString","fnStr","fnToString","namedFunctionMatch","match","toStr","fnName","_fn","slice","isRejection","stringifyPattern","x","constructor","o","seen","format","value","JSON","key","beforeAfterSubstr","char","hostRegex","stripLastPathElement","splitHash","splitQuery","splitEqual","trimHashVal","splitOnDelim","delim","re","filter","joinNeighborsR","acc","concat","noopConsoleStub","log","error","table","safeConsole","getSafeConsole","document","documentMode","window","console","ie9Console","bound","Function","bind","call","fallbackConsole","uiViewString","uiview","state","creationContext","id","$type","fqn","Category","normalizedCat","input","_tid","_rid","transLbl","trans","Trace","_enabled","approximateDigests","_set","enabled","categories","_this","keys","k","parseInt","isNaN","category","enable","_i","arguments","disable","traceTransitionStart","TRANSITION","traceTransitionIgnored","traceHookInvocation","step","HOOK","event","context","registeredHook","callback","traceHookResult","hookResult","transitionOptions","traceResolvePath","path","when","RESOLVE","traceResolvableResolved","resolvable","data","traceError","reason","traceSuccess","finalState","traceUIViewEvent","viewData","extra","UIVIEW","traceUIViewConfigUpdated","traceUIViewFill","html","traceViewSync","pairs","VIEWCONFIG","uivheader","mapping","_a","_b","uiView","viewConfig","uiv","cfg","viewDecl","$context","$name","sort","a","b","localeCompare","traceViewServiceEvent","view","$uiViewName","$uiViewContextAnchor","viewConfigString","traceViewServiceUIViewEvent","trace","ParamType","def","pattern","inherit","val","encode","decode","equals","$subPattern","sub","$normalize","$asArray","mode","isSearch","Error","ArrayType","arrayWrap","arrayHandler","allTruthyMode","handleArray","arr","result","arrayUnwrap","arrayEqualsHandler","val1","val2","left","right","i","paramTypeFn","wrapperFn","dynamic","raw","$arrayMode","DefType","hasOwn","hasOwnProperty","getParamDeclaration","paramName","location","noReloadOnSearch","reloadOnSearch","SEARCH","undefined","defaultConfig","paramConfig","unwrapShorthand","getStaticDefaultValue","isShorthand","$$fn","params","Param","urlConfig","config","getType","urlType","paramTypes","CONFIG","PATH","arrayMode","getArrayMode","arrayDefaults","array","arrayParamNomenclature","isOptional","squash","getSquashPolicy","defaultPolicy","defaultSquashPolicy","getReplace","from","to","configuredKeys","values","paramValues","params_1","param","changed","values1","values2","validates","reduce","isDefaultValue","tuple","replaceSpecialValues","_defaultValueCache","defaultValue","$injector","invoke","getDefaultValue","normalized","encoded","ParamTypes","typeQueue","defaultTypes","types","definition","dispose","definitionFn","_flushTypeQueue","initDefaultTypes","makeDefaultType","valToString","defaultTypeBase","String","string","query","hash","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","Date","valueOf","l","r","json","any","StateParams","$inherit","newParams","$current","$to","parentParams","parents","inherited","inheritList","j","PathNode","stateOrNode","node","paramSchema","resolvables","views","parameters","res","clone","applyRawParams","memo","pDef","paramDef","parameter","paramsFn","diff","TargetState","_stateRegistry","_identifier","_params","_options","_definition","matcher","find","relative","identifier","$state","self","exists","valid","base","stateName","withState","withParams","withOptions","newOpts","isDef","PathUtils","makeTargetState","registry","buildPath","targetState","toParams","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","$view","states","viewDecls","subPath","n","viewConfigs","createViewConfig","toKeys","noInherit","makeInheritedParamsNode","toNode","toParamVals","incomingParamVals","fromParamVals","nodeParamVals","ownParamVals","treeChanges","reloadState","node1","node2","retained","exiting","entering","Math","min","keep","nonDynamicParams","retainedWithToParams","applyToParams","retainedNode","cloned","matching","pathA","pathB","done","nodeA","nodeB","predicate","elementIdx","resolvePolicies","LAZY","EAGER","async","WAIT","NOWAIT","defaultResolvePolicy","Resolvable","arg1","resolveFn","deps","policy","resolved","promise","token","$q","literal","getPolicy","thisPolicy","statePolicy","resolvePolicy","resolve","resolveContext","findNode","asyncPolicy","customAsyncPolicy","all","getDependencies","get","resolvedDeps","apply","resolvedValue","fromData","whens","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","ResolveContext","_path","getTokens","getResolvable","subContext","addResolvables","newResolvables","resolvePath","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","promises","nodeResolvables","nowait","wait","getResult","injector","_injector","availableResolvables","_node","fromInjector","getNative","UIInjectorImpl","native","getAsync","nameBuilder","selfBuilder","$$state","dataBuilder","parent","getUrlBuilder","$urlMatcherFactoryProvider","root","urlBuilder","stateObject","stateDec","url","newStateDec","parsed","charAt","substring","parseUrl","compile","isMatcher","navigable","append","getNavigableBuilder","isRoot","navigableBuilder","pathBuilder","includesBuilder","includes","resolvablesBuilder","getToken","p","provide","literal2Resolvable","useFactory","dependencies","useClass","useValue","useExisting","tuple2Resolvable","annotate","strictDi","item2Resolvable","decl","resolveObj","objects2Tuples","TransitionHookPhase","TransitionHookScope","StateBuilder","urlMatcherFactory","paramFactory","builders","parentBuilder","parentName","paramsBuilder","urlParams","nonUrlParams","fromConfig","builder","build","chain","parentFn","_state","segments","pop","StateObject","create","stateDecl","isStateClass","__stateObjectCache","nameGlob","ref","opts","matchingKeys","isStateDeclaration","isState","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","StateQueueManager","router","listeners","queue","register","flush","registered","orphans","previousQueueLength","getState","notifyListeners","listener","s","name_1","orphanIdx","existingState","existingFutureState","stateRegistry","deregister","attachRoute","prev","abstract","rulesApi","urlService","rules","rule","urlRuleFactory","StateRegistry","stateQueue","_registerRoot","_root","onStatesChanged","deregisterListener","stateDefinition","_deregisterTree","getChildren","_children","children","deregistered","reverse","removeRule","deregisteredStates","found","decorator","func","defaultOptions","transition","traceData","TransitionHook","stateContext","isSuperseded","hookPhase","RUN","isActive","eventType","hooks","waitFor","nextHook","invokeHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","hook","logError","err","stateService","defaultErrorHandler","_deregistered","notCurrent","getNotCurrentRejection","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","catch","invokeLimit","invokeCount","handleHookResult","isTargetState","_disposed","_aborted","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","matchState","criterion","toMatch","matchGlobs","globStrings","RegisteredHook","tranSvc","matchCriteria","removeHookFromRegistry","priority","_matchingNodes","nodes","_getDefaultMatchCriteria","_pluginapi","_getPathTypes","_getMatchingNodes","criteria","mn","pathtype","isStateHook","scope","STATE","every","makeEvent","transitionService","_registeredHooks","removeHookFn","hookRegistrationFn","matchObject","HookBuilder","buildHooksForPhase","phase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","criteriaMatchPath","transitionHook","tupleSort","reverseDepthSort","nodeDepthThenPriority","factor","depthDelta","reverseSort","isCreate","CREATE","$transitions","reg","getHooks","stateSelf","Transition","_deferred","defer","_hookBuilder","globals","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onBefore","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","hookName","enteringStates","$from","compare","pathname","freeze","paramsChanged","fromParams","allParamDescriptors","pathNode","changedValues","descriptor","pathName","getResolveTokens","addResolvable","topath","targetNode","redirectedFrom","originalTransition","rf","redirect","redirects","redirectOpts","source","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","toValues","fromValues","schema","toVals","fromVals","changes","_ignoredReason","pending","same","newTC","pendTC","run","getHooksFor","allBeforeHooks","BEFORE","lastStartedTransitionId","transitionHistory","allRunHooks","success","SUCCESS","reject","_error","abort","paramDefs","invalidParams","invalidValues","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","quoteRegExp","surroundPattern","splitOnSlash","strict","caseInsensitive","UrlMatcher","_cache","_segments","_compiled","matchArray","details","segment","placeholder","searchPlaceholder","patterns","last","checkParamErrors","nameValidator","matchDetails","m","index","lastIndex","search","fromSearch","_pattern","encodeDashes","encodeURIComponent","c","charCodeAt","toUpperCase","pathSegmentsAndParams","staticSegments","pathParams","queryParams","weights","weightsA","weightsB","padVal","len","padArrays","cmp","_pairs","_prop","reverseString","allReversed","allParams","searchParams","nPathSegments","urlm","findParam","urlMatchers","getDetails","isValid","pathString","queryString","paramDetails","__assign","assign","t","ParamFactory","UrlMatcherFactory","strictMode","globalConfig","_isStrictMode","_isCaseInsensitive","object","$get","UrlRuleFactory","what","handler","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","urlMatcher","_handler","matchPriority","optional","matchUrlParamters","stateOrDecl","href","transitionTo","global","sticky","Number","isUrlRule","BaseUrlRule","defaultRuleSortFn","UrlRouter","sync","evt","listen","deferIntercept","urlParts","initial","otherwise","compareFn","update","read","$url","locationService","absolute","isHtml5","html5Mode","hashPrefix","appendBasePath","baseHref","slash","cfgPort","port","protocol","host","defineProperty","interceptDeferred","enumerable","configurable","ViewService","_uiViews","_viewConfigs","_viewConfigFactories","_listeners","_rootViewContext","_viewConfigFactory","_registeredUIView","_registeredUIViews","_activeViewConfigs","_onSync","normalizeUIViewTarget","rawViewName","viewAtContext","uiViewName","uiViewContextAnchor","relativeViewNameSugar","anchorState","anchor","_rootContext","viewType","factory","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewsByFqn","viewConfigDepth","count","depthCompare","depthFn","posNeg","uiViewTuples","uiViewDepth","stateDepth","matchingConfigs","matchedViewConfigs","unmatchedConfigTuples","configUpdated","allTuples","cb","registerUIView","uiViews","available","active","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","UIRouterGlobals","successfulTransitions","getHandlerFn","prioritySort","URLMATCHER","REGEXP","RAW","OTHER","typeSort","urlMatcherSort","useMatchPriority","idSort","UrlRules","_sortFn","_rules","_id","_otherwiseFn","handlerFn","_sorted","ensureSorted","sorted","stableSort","group","_group","arrOfWrapper","elem","wrapperA","wrapperB","cmpDiff","wrapper","UrlConfig","_defaultSquashPolicy","locationConfig","newprefix","UrlService","newurl","onChange","parts","defaultPrevented","best","go","target","applyResult","_stopListeningFn","weight","_routerInstance","locationServiceStub","locationConfigStub","UIRouter","_disposables","viewService","urlRouter","_plugins","disposable","plugin","pluginInstance","getPlugin","pluginName","addCoreResolvables","TRANSITION_TOKENS","isTransition","treeChangesCleanup","replaceTransitionWithNull","redirectToHook","redirectTo","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","eagerResolvePath","lazyResolveState","resolveRemaining","loadEnteringViews","enteringViews","load","activateViews","exitingViews","updateGlobalState","clearCurrentTransition","updateUrl","$urlRouter","urlOptions","lazyLoadHook","lazyLoad","lazyLoadState","retryTransition","orig","lazyLoadFn","updateStateRegistry","Array","isArray","TransitionEventType","hookOrder","ignoredHook","ignoredReason","invalidTransitionHook","defaultTransOpts","notify","supercede","custom","TransitionService","_router","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","onCreate","hooksArray","Phase","TH","paths","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","registerIgnoredTransitionHook","registerInvalidTransitionHook","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","resolveAll","registerResolveRemaining","loadViews","registerLoadEnteringViews","registerActivateViews","updateGlobals","registerUpdateGlobalState","registerUpdateUrl","registerLazyLoadHook","StateService","invalidCallbacks","_defaultErrorHandler","$defaultErrorHandler","$error$","stack","boundFns","_handleInvalidTargetState","toState","latestThing","latest","callbackQueue","checkForRedirect","invokeNextCallback","nextCallback","onInvalid","defautGoOpts","transOpts","getCurrentPath","latestSuccess","getCurrent","currentPath","rejectedTransitionHandler","isLatest","errorHandler","transitionToPromise","include","defaultHrefOpts","lossy","nav","Promise","deferred","STRIP_COMMENTS","ARGUMENT_NAMES","has","locals","ensureExist","args","$inject","keyValsToObjectR","accum","getParams","orEmptyString","beforehash","buildUrl","loc","searchObject","locationPluginFactory","serviceClass","configurationClass","uiRouter","service","configuration","extendStatics","BaseLocationServices","fireAfterUpdate","_listener","_get","_location","_history","history","__extends","setPrototypeOf","__proto__","__","_super","HashLocationService","addEventListener","title","removeEventListener","MemoryLocationService","_url","PushStateLocationService","_config","_getBasePrefix","basePrefix","exactBaseHrefMatch","startsWithBase","fullUrl","replaceState","pushState","MemoryLocationConfig","_baseHref","_port","_protocol","_host","_hashPrefix","newval","BrowserLocationConfig","_isHtml5","hostname","getBaseHref","baseTag","getElementsByTagName","servicesPlugin","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin","UIRouterPluginBase","makeStub","methods","fnname","services","ng_from_global","angular","ng","getNg1ViewConfigFactory","templateFactory","hasAnyKey","ng1ViewsBuilder","compKeys","nonCompKeys","allViewKeys","viewsObject","$default","component","resolveAs","Ng1ViewConfig","loaded","getTemplate","makeComponentTemplate","bindings","template","controller","getController","results","provider","controllerProvider","providerFn","TemplateFactory","_useHttp","version","minor","$http","$templateCache","$templateRequest","useHttpService","asTemplate","asComponent","templateUrl","fromUrl","templateProvider","fromProvider","componentProvider","fromComponentProvider","cache","headers","Accept","response","prefix","kebob","kebobed","attrs","getComponentBindings","cmpDefs","getBindings","attrName","attr","resolveName","kebobName","bindToController","scopeBindings","bindingsObj","StateProvider","getStateHookBuilder","stateHookBuilder","decoratedNg1Hook","getLocals","$state$","$transition$","Ng1LocationServices","$locationProvider","_urlListeners","_lp","monkeyPatchPathParameterType","pathType","$sniffer","$browser","$window","newUrl","$location","_runtimeServices","$rootScope","$on","_loc","UrlRouterProvider","injectableHandler","$match","$stateParams","ruleFn","urlRules","module","mod_init","mod_util","mod_rtr","mod_state","mod_main","$uiRouterProvider","stateProvider","ng1LocationService","getProviderFor","serviceName","$urp","runBlock","$uiRouter","checkStrictDi","watchDigests","$watch","urlRouterProvider","$urlMatcherFactory","uiSrefDirective","uiStateDirective","uiSrefActiveDirective","ctx","parseStateRef","paramsOnly","paramExpr","el","$uiView","inheritedData","processedDef","$element","uiState","uiStateOpts","defaultOpts","uiStateParams","getTypeInfo","isSvg","prop","isForm","nodeName","isAnchor","clickable","clickHook","$timeout","getDef","e","button","which","ctrlKey","metaKey","shiftKey","transition_1","preventDefault","ignorePreventDefaultCount_1","cancel","bindEvents","element","events","on","events_1","event_1","off","events_2","event_2","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","$ViewDirectiveFill","$compile","$controller","getControllerAs","getResolveAs","restrict","tElement","empty","contents","$cfg","resolveCtx","link","controllerAs","controllerInstance","$scope","registerControllerCallbacks","tagRegexp_1","deregisterWatch_1","directiveEl","tagName","ctrlInstance","$StateRefDirective","require","uiSrefActive","unlinkInfoFn","rawDef","uiSref","$$addStateInfo","$set","uiSrefOpts","$eval","$StateRefDynamicDirective","inputAttrs","watchDeregFns","field","$observe","expr","$StateRefActiveDirective","$interpolate","$attrs","activeEqClass","uiSrefActiveEq","updateAfterTransition","handleStatesChanged","setStatesFromDefinitionObject","statesDefinition","activeClass","addStateForClass","addState","stateParams","stateInfo","removeState","splitClasses","getClasses","stateList","allClasses","fuzzyClasses","exactClasses","addClasses","removeClasses","cls","$evalAsync","className","addClass","removeClass","newState","setupEventListeners","deregisterStatesChangedListener","deregisterOnStartListener","deregisterStateChangeSuccessListener","cleanUp","directive","$ViewDirective","$animate","$uiViewScroll","rootData","terminal","transclude","tAttrs","$transclude","previousEl","currentEl","currentScope","unregister","onloadExp","autoScrollExp","renderer","getRenderer","enter","leave","activeUIView","configUpdatedCallback","configsEqual","config1","config2","updateView","fromParentTagConfig","fromParentTag","newScope","$new","animEnter","animLeave","$uiViewData","$uiViewAnim","$animEnter","$animLeave","$$animLeave","$emit","onUIViewEnter","cleanupLastView","$destroy","_viewData_1","hasComponentImpl","_uiCanExitId","$onInit","viewState","hookOptions","uiOnParamsChanged","viewCreationTrans_1","getNodeSchema","toSchema","fromSchema","changedToParams","changedKeys_1","newValues","uiCanExit","id_1","prevTruthyAnswer_1","ids","$ViewScrollProvider","useAnchorScroll","$anchorScroll","scrollIntoView","UIRouterRx","deregisterFns","start$","ReplaySubject","success$","pipe","mergeMap","params$","states$","onStatesChangedEvent","changeEvent","currentStates","next","deregisterFn","__spreadArrays","il","jl","fromJson","parse","toJson","_forEach","extend","_extend","_equals","identity","noop","createProxyFunctions","fnNames","latebind","bindFunction","lateRebindFunction","inArray","_inArray","removeFrom","_removeFrom","pushTo","_pushTo","deregAll","functions","defaults","defaultsList","defaultVals","pick","mergeR","ancestors","first","second","propNames","objCopy","omit","pluck","collection","propName","accept","mapObj","allTrueR","anyTrueR","unnestR","flattenR","pushR","uniqR","unnest","flatten","assertPredicate","assertFn","assertMap","predicateOrMap","errMsg","arrayTuples","maxArrayLen","_loop_1","applyPairs","keyValTuple","tail","copy","src","dest","toObj","o1","o2","t1","tup","_arraysEq","a1","a2","getTime","silenceUncaughtInPromise","silentRejection","upgradeModule","objectFactory","UIViewNgUpgrade","ng1elem","nativeElement","ctorParameters","decorators","PARENT_INJECT","selector","viewProviders","uiRouterUpgradeFactory","getUIRouter","getParentUIViewInject","ɵ0","UIRouterUpgradeModule","UIRouterUpgradeModule_1","forRoot","ngModule","providers","forChild","imports","declarations","multi","entryComponents","exports","inputs","ng1Injector","mergedInjector","ng2NotFoundValue","ng2Injector","ng2InjectorResolvable","$stateRegistry","viewName","$templateFactory","ng1ViewConfig","tis","isUndefined","isDefined","isNull","isNullOrUndefined","isFunction","isNumber","isString","isObject","isDate","isRegExp","isInjectable","head","isPromise","ng2ViewsBuilder","Ng2ViewConfig","MergeInjector","injectors","notFoundValue","NOT_FOUND","id$1","ng2ComponentInputs","templateName","UIView","viewContainerRef","_uiViewData","_parent","UIView_1","set","ngOnInit","parentFqn","_viewConfigUpdated","_deregisterUiCanExitHook","_invokeUiCanExitHook","_deregisterUiOnParamsChangedHook","_invokeUiOnParamsChangedHook","_deregisterUIView","instance","_componentRef","uiCanExitFn","toParams_1","fromParams_1","fromSchema_1","_disposeLast","destroy","ngOnDestroy","_applyUpdatedConfig","changeDetectorRef","markForCheck","componentInjector","_getComponentInjector","componentClass","compFactory","resolveComponentFactory","_componentTarget","createComponent","_applyInputBindings","newProviders","parentInject","parentComponentInjector","moduleInjector","mergedParentInjector","resolveAndCreate","explicitBoundProps","explicitInputTuples","implicitInputTuples","static","exportAs","applyModuleConfig","applyRootModuleConfig","AnchorUISref","_el","_renderer","openInNewTab","setProperty","removeAttribute","UISref","_anchorUISref","targetState$","_emit","_statesSub","subscribe","ngOnChanges","unsubscribe","newTarget","getOptions","inactiveStatus","exact","targetStates","pathMatches","targetParamVals","tailNode","spreadToSubPaths","basePath","appendPath","mergeSrefStatus","UISrefStatus","_hostUiSref","_globals","uiSrefStatus","status","ngAfterContentInit","transEvents$","transStart$","transResult","transFinish$","withHostSref","childrenSrefs","_srefs$","_srefs","toArray","_srefChangesSub","srefs","targetStates$","sref","_subscription","targets","getSrefStatus","srefTarget","pathMatchesTarget","isStartEvent","activePath","_setStatus","emit","descendants","UISrefActive","rnd","_classes","_classesEq","_UIROUTER_DIRECTIVES","UIROUTER_DIRECTIVES","UIROUTER_ROOT_MODULE","UIROUTER_MODULE_TOKEN","UIROUTER_STATES","onTransitionReady","mod","deferInitialRender","makeRootProviders","makeChildProviders","locationStrategy","useHash","UIRouterModule","UIRouterModule_1","_UIROUTER_INSTANCE_PROVIDERS","_UIROUTER_SERVICE_PROVIDERS","loadNgModule","moduleToLoad","loadModuleFactory","moduleRef","applyNgModule","compiler","__esModule","compileModuleAsync","ng2Module","parentInjector","originalName","originalState","isFuture","replacementName","newRootModules","multiProviderParentChildDelta","newChildModules","newStateObjects","replacementState","child","childVals","parentVals","ng2LazyLoadBuilder","loadNgModuleFn","Ng2LocationServices","_locationStrategy","isBrowser","onPopState","urlWithHash","Ng2LocationConfig","uiRouterFactory","rootModules","modules","moduleConfig","appInitializer","parentUIViewInjectFactory","fnStateService","fnTransitionService","fnUrlMatcherFactory","fnUrlRouter","fnUrlService","fnViewService","fnStateRegistry","fnGlobals","UIROUTER_PROVIDERS","curry","curried","compose","start","funcs","propEq","_val","not","and","fn1","fn2","or","ctor","eq","other","v","struct"],"mappings":"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","file":"uirouter.js","sourcesContent":["/** @packageDocumentation @publicapi @module transition */\n'use strict';\nimport { extend, silentRejection } from '../common/common';\nimport { stringify } from '../common/strings';\nimport { is } from '../common/hof';\nvar RejectType;\n(function (RejectType) {\n    /**\n     * A new transition superseded this one.\n     *\n     * While this transition was running, a new transition started.\n     * This transition is cancelled because it was superseded by new transition.\n     */\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    /**\n     * The transition was aborted\n     *\n     * The transition was aborted by a hook which returned `false`\n     */\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    /**\n     * The transition was invalid\n     *\n     * The transition was never started because it was invalid\n     */\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    /**\n     * The transition was ignored\n     *\n     * The transition was ignored because it would have no effect.\n     *\n     * Either:\n     *\n     * - The transition is targeting the current state and parameter values\n     * - The transition is targeting the same state and parameter values as the currently running transition.\n     */\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    /**\n     * The transition errored.\n     *\n     * This generally means a hook threw an error or returned a rejected promise\n     */\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType || (RejectType = {}));\nexport { RejectType };\n/** @hidden */\nvar id = 0;\nvar Rejection = /** @class */ (function () {\n    function Rejection(type, message, detail) {\n        /** @hidden */\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = 'The transition has been superseded by a different transition';\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = 'This transition is invalid';\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = 'The transition was ignored';\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = 'The transition has been aborted';\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = 'The transition errored';\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) { return (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d)); };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    return Rejection;\n}());\nexport { Rejection };\n//# sourceMappingURL=rejectFactory.js.map","/** @packageDocumentation @publicapi @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = /** @class */ (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text\n            .split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        })\n            .join('');\n        this.regexp = new RegExp('^' + regexpString + '$');\n    }\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    return Glob;\n}());\nexport { Glob };\n//# sourceMappingURL=glob.js.map","/** @packageDocumentation @publicapi @module common */\nimport { pushTo } from './common';\nvar Queue = /** @class */ (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n        this._evictListeners = [];\n        this.onEvict = pushTo(this._evictListeners);\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            this.evict();\n        return item;\n    };\n    Queue.prototype.evict = function () {\n        var item = this._items.shift();\n        this._evictListeners.forEach(function (fn) { return fn(item); });\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexport { Queue };\n//# sourceMappingURL=queue.js.map","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @packageDocumentation @module common_strings\n */\nimport { isArray, isFunction, isInjectable, isNull, isObject, isPromise, isString, isUndefined } from './predicates';\nimport { Rejection } from '../transition/rejectFactory';\nimport { identity, pushR, tail } from './common';\nimport { pattern, val } from './hof';\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + '...';\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length, str) {\n    while (str.length < length)\n        str += ' ';\n    return str;\n}\nexport function kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return '-' + $1.toLowerCase(); }); // replace rest\n}\nexport function functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || '';\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexport function fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return (_fn && _fn.toString()) || 'undefined';\n}\nvar isRejection = Rejection.isRejectionPromise;\nvar hasToString = function (obj) {\n    return isObject(obj) && !isArray(obj) && obj.constructor !== Object && isFunction(obj.toString);\n};\nvar stringifyPattern = pattern([\n    [isUndefined, val('undefined')],\n    [isNull, val('null')],\n    [isPromise, val('[Promise]')],\n    [isRejection, function (x) { return x._transitionRejection.toString(); }],\n    [hasToString, function (x) { return x.toString(); }],\n    [isInjectable, functionToString],\n    [val(true), identity],\n]);\nexport function stringify(o) {\n    var seen = [];\n    function format(value) {\n        if (isObject(value)) {\n            if (seen.indexOf(value) !== -1)\n                return '[circular ref]';\n            seen.push(value);\n        }\n        return stringifyPattern(value);\n    }\n    if (isUndefined(o)) {\n        // Workaround for IE & Edge Spec incompatibility where replacer function would not be called when JSON.stringify\n        // is given `undefined` as value. To work around that, we simply detect `undefined` and bail out early by\n        // manually stringifying it.\n        return format(o);\n    }\n    return JSON.stringify(o, function (key, value) { return format(value); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nexport var beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return ['', ''];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, ''];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexport var hostRegex = new RegExp('^(?:[a-z]+:)?//[^/]+/');\nexport var stripLastPathElement = function (str) { return str.replace(/\\/[^/]*$/, ''); };\nexport var splitHash = beforeAfterSubstr('#');\nexport var splitQuery = beforeAfterSubstr('?');\nexport var splitEqual = beforeAfterSubstr('=');\nexport var trimHashVal = function (str) { return (str ? str.replace(/^#/, '') : ''); };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nexport function splitOnDelim(delim) {\n    var re = new RegExp('(' + delim + ')', 'g');\n    return function (str) { return str.split(re).filter(identity); };\n}\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nexport function joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n//# sourceMappingURL=strings.js.map","/**\n * workaround for missing console object in IE9 when dev tools haven't been opened o_O\n * @packageDocumentation @module core\n */\n/* tslint:disable:no-console */\nimport { noop } from './common';\nvar noopConsoleStub = { log: noop, error: noop, table: noop };\nfunction ie9Console(console) {\n    var bound = function (fn) { return Function.prototype.bind.call(fn, console); };\n    return {\n        log: bound(console.log),\n        error: bound(console.log),\n        table: bound(console.log),\n    };\n}\nfunction fallbackConsole(console) {\n    var log = console.log.bind(console);\n    var error = console.error ? console.error.bind(console) : log;\n    var table = console.table ? console.table.bind(console) : log;\n    return { log: log, error: error, table: table };\n}\nfunction getSafeConsole() {\n    // @ts-ignore\n    var isIE9 = typeof document !== 'undefined' && document.documentMode && document.documentMode === 9;\n    if (isIE9) {\n        return window && window.console ? ie9Console(window.console) : noopConsoleStub;\n    }\n    else if (!console.table || !console.error) {\n        return fallbackConsole(console);\n    }\n    else {\n        return console;\n    }\n}\nexport var safeConsole = getSafeConsole();\n//# sourceMappingURL=safeConsole.js.map","/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @packageDocumentation @publicapi @module trace\n */\nimport { parse } from '../common/hof';\nimport { isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\nimport { safeConsole } from './safeConsole';\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\nexport { Category };\n/** @hidden */\nvar _tid = parse('$id');\n/** @hidden */\nvar _rid = parse('router.$id');\n/** @hidden */\nvar transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = /** @class */ (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return (_this._enabled[category] = enabled); });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        safeConsole.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        safeConsole.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = functionToString(step.registeredHook.callback);\n        safeConsole.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        safeConsole.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        safeConsole.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        safeConsole.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        safeConsole.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        safeConsole.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = ''; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        safeConsole.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var uivheader = 'uiview component fqn';\n        var cfgheader = 'view config state (view name)';\n        var mapping = pairs\n            .map(function (_a) {\n            var _b;\n            var uiView = _a.uiView, viewConfig = _a.viewConfig;\n            var uiv = uiView && uiView.fqn;\n            var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n            return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n        })\n            .sort(function (a, b) { return (a[uivheader] || '').localeCompare(b[uivheader] || ''); });\n        safeConsole.table(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        safeConsole.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        safeConsole.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexport { trace };\n//# sourceMappingURL=trace.js.map","/** @packageDocumentation @publicapi @module params */\nimport { extend, filter, map } from '../common/common';\nimport { isArray, isDefined } from '../common/predicates';\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = /** @class */ (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) {\n        return true;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n    };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === 'auto' && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexport { ParamType };\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : isDefined(val) ? [val] : [];\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return mode === 'auto' ? val[0] : val;\n            default:\n                return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return allTruthyMode === true ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        raw: type.raw,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode,\n    });\n}\n//# sourceMappingURL=paramType.js.map","/** @packageDocumentation @publicapi @module params */\nimport { extend, filter, map, allTrueR, find } from '../common/common';\nimport { prop } from '../common/hof';\nimport { isInjectable, isDefined, isString, isArray, isUndefined } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/** @hidden */\nvar hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */\nvar isShorthand = function (cfg) {\n    return ['value', 'type', 'squash', 'array', 'dynamic'].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType || (DefType = {}));\nexport { DefType };\n/** @internalapi */\nfunction getParamDeclaration(paramName, location, state) {\n    var noReloadOnSearch = (state.reloadOnSearch === false && location === DefType.SEARCH) || undefined;\n    var dynamic = find([state.dynamic, noReloadOnSearch], isDefined);\n    var defaultConfig = isDefined(dynamic) ? { dynamic: dynamic } : {};\n    var paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);\n    return extend(defaultConfig, paramConfig);\n}\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) ? { value: cfg } : cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    var $$fn = isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue;\n    return extend(cfg, { $$fn: $$fn });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG\n            ? 'any'\n            : location === DefType.PATH\n                ? 'path'\n                : location === DefType.SEARCH\n                    ? 'query'\n                    : 'string';\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var defaultPolicy = [\n        { from: '', to: isOptional || arrayMode ? undefined : '' },\n        { from: null, to: isOptional || arrayMode ? undefined : '' },\n    ];\n    var replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    var configuredKeys = map(replace, prop('from'));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = /** @class */ (function () {\n    function Param(id, type, location, urlConfig, state) {\n        var config = getParamDeclaration(id, location, state);\n        type = getType(config, type, location, id, urlConfig.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: location === DefType.SEARCH ? 'auto' : false };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(allTrueR, true);\n    };\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error('Injectable functions cannot be called at configuration time');\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    return Param;\n}());\nexport { Param };\n//# sourceMappingURL=param.js.map","/** @packageDocumentation @publicapi @module params */\nimport { fromJson, toJson, identity, equals, inherit, map, extend, pick } from '../common/common';\nimport { isDefined, isNullOrUndefined } from '../common/predicates';\nimport { is } from '../common/hof';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n *\n * To register custom parameter types, use [[UrlConfig.type]], i.e.,\n *\n * ```js\n * router.urlService.config.type(customType)\n * ```\n */\nvar ParamTypes = /** @class */ (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\n            'hash',\n            'string',\n            'query',\n            'path',\n            'int',\n            'bool',\n            'date',\n            'json',\n            'any',\n        ]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new ParamType(extend({ name: name }, definition)); };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexport { ParamTypes };\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) { return (val != null ? val.toString() : val); };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            // tslint:disable-next-line:triple-equals\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return (val && 1) || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/,\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val)\n                    ? undefined\n                    : [val.getFullYear(), ('0' + (val.getMonth() + 1)).slice(-2), ('0' + val.getDate()).slice(-2)].join('-');\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate'].reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/,\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/,\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map","/** @packageDocumentation @publicapi @module params */\nimport { extend, ancestors } from '../common/common';\n/** @internalapi */\nvar StateParams = /** @class */ (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parentParams;\n        var parents = ancestors($current, $to), inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    return StateParams;\n}());\nexport { StateParams };\n//# sourceMappingURL=stateParams.js.map","/** @packageDocumentation @internalapi @module path */\nimport { extend, applyPairs, find } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Param } from '../params/param';\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = /** @class */ (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    PathNode.prototype.clone = function () {\n        return new PathNode(this);\n    };\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq('id', name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /**\n     * Returns a clone of the PathNode\n     * @deprecated use instance method `node.clone()`\n     */\n    PathNode.clone = function (node) { return node.clone(); };\n    return PathNode;\n}());\nexport { PathNode };\n//# sourceMappingURL=pathNode.js.map","/** @packageDocumentation @publicapi @module state */\nimport { isObject, isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { extend } from '../common';\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = /** @class */ (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _stateRegistry The StateRegistry to use to look up the _definition\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_stateRegistry, _identifier, _params, _options) {\n        this._stateRegistry = _stateRegistry;\n        this._identifier = _identifier;\n        this._identifier = _identifier;\n        this._params = extend({}, _params || {});\n        this._options = extend({}, _options || {});\n        this._definition = _stateRegistry.matcher.find(_identifier, this._options.relative);\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return (this._definition && this._definition.name) || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + stringify(this.params());\n    };\n    /**\n     * Returns a copy of this TargetState which targets a different state.\n     * The new TargetState has the same parameter values and transition options.\n     *\n     * @param state The new state that should be targeted\n     */\n    TargetState.prototype.withState = function (state) {\n        return new TargetState(this._stateRegistry, state, this._params, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified parameter values.\n     *\n     * @param params the new parameter values to use\n     * @param replace When false (default) the new parameter values will be merged with the current values.\n     *                When true the parameter values will be used instead of the current values.\n     */\n    TargetState.prototype.withParams = function (params, replace) {\n        if (replace === void 0) { replace = false; }\n        var newParams = replace ? params : extend({}, this._params, params);\n        return new TargetState(this._stateRegistry, this._identifier, newParams, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified Transition Options.\n     *\n     * @param options the new options to use\n     * @param replace When false (default) the new options will be merged with the current options.\n     *                When true the options will be used instead of the current options.\n     */\n    TargetState.prototype.withOptions = function (options, replace) {\n        if (replace === void 0) { replace = false; }\n        var newOpts = replace ? options : extend({}, this._options, options);\n        return new TargetState(this._stateRegistry, this._identifier, this._params, newOpts);\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) {\n        return obj && obj.state && (isString(obj.state) || (isObject(obj.state) && isString(obj.state.name)));\n    };\n    return TargetState;\n}());\nexport { TargetState };\n//# sourceMappingURL=targetState.js.map","/** @packageDocumentation @internalapi @module path */\nimport { extend, find, pick, omit, tail, mergeR, values, unnestR, inArray, arrayTuples, } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { TargetState } from '../state/targetState';\nimport { PathNode } from './pathNode';\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = /** @class */ (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (registry, path) {\n        var state = tail(path).state;\n        return new TargetState(registry, state, path.map(prop('paramValues')).reduce(mergeR, {}), {});\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path\n            .filter(function (node) { return inArray(states, node.state); })\n            .forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath\n            .map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var max = Math.min(fromPath.length, toPath.length);\n        var keep = 0;\n        var nodesMatch = function (node1, node2) { return node1.equals(node2, PathUtils.nonDynamicParams); };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = retainedNode.clone();\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = retainedWithToParams.concat(entering);\n        return { from: from, to: to, retained: retained, retainedWithToParams: retainedWithToParams, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length && PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false }).filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) { return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {}); };\n    return PathUtils;\n}());\nexport { PathUtils };\n//# sourceMappingURL=pathUtils.js.map","/** @internalapi */\nexport var resolvePolicies = {\n    when: {\n        LAZY: 'LAZY',\n        EAGER: 'EAGER',\n    },\n    async: {\n        WAIT: 'WAIT',\n        NOWAIT: 'NOWAIT',\n    },\n};\n//# sourceMappingURL=interface.js.map","/** @packageDocumentation @publicapi @module resolve */\nimport { extend, identity } from '../common/common';\nimport { services } from '../common/coreservices';\nimport { trace } from '../common/trace';\nimport { stringify } from '../common/strings';\nimport { isFunction, isObject } from '../common/predicates';\nimport { isNullOrUndefined } from '../common/predicates';\n// TODO: explicitly make this user configurable\nexport var defaultResolvePolicy = {\n    when: 'LAZY',\n    async: 'WAIT',\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = /** @class */ (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error('new Resolvable(): token argument is required');\n            if (!isFunction(resolveFn))\n                throw new Error('new Resolvable(): resolveFn argument must be a function');\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && (arg1.hasOwnProperty('resolveFn') || arg1.hasOwnProperty('data'))) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = (state && state.resolvePolicy) || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) { return resolvable.get(resolveContext, trans); }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) { return _this.resolveFn.apply(null, resolvedDeps); };\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var asyncPolicy = this.getPolicy(state).async;\n        var customAsyncPolicy = isFunction(asyncPolicy) ? asyncPolicy : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            _this.resolveFn = null;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return (this.promise = $q\n            .when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(customAsyncPolicy)\n            .then(applyResolvedValue));\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) { return new Resolvable(token, function () { return data; }, null, null, data); };\n    return Resolvable;\n}());\nexport { Resolvable };\n//# sourceMappingURL=resolvable.js.map","/** @packageDocumentation @publicapi @module resolve */\nimport { find, tail, uniqR, unnestR, inArray } from '../common/common';\nimport { propEq, not } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { resolvePolicies } from './interface';\nimport { Resolvable } from './resolvable';\nimport { PathUtils } from '../path/pathUtils';\nimport { stringify } from '../common/strings';\nimport { isUndefined } from '../common';\nvar whens = resolvePolicies.when;\nvar ALL_WHENS = [whens.EAGER, whens.LAZY];\nvar EAGER_WHENS = [whens.EAGER];\n// tslint:disable-next-line:no-inferrable-types\nexport var NATIVE_INJECTOR_TOKEN = 'Native Injector';\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = /** @class */ (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path\n            .map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = 'LAZY'; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : 'LAZY';\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) { return function (resolvable) {\n            return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n        }; };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) {\n                return r\n                    .get(subContext, trans)\n                    // Return a tuple that includes the Resolvable's token\n                    .then(function (value) { return ({ token: r.token, value: value }); });\n            };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, _node) { return acc.concat(_node.resolvables); }, []) // all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (isUndefined(fromInjector)) {\n                throw new Error('Could not find Dependency Injection token: ' + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexport { ResolveContext };\n/** @internalapi */\nvar UIInjectorImpl = /** @class */ (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error('Resolvable async .get() not complete:' + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.getNative(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map","/** @packageDocumentation @publicapi @module state */\nimport { applyPairs, extend, identity, inherit, mapObj, noop, omit, tail, values, copy } from '../common/common';\nimport { isArray, isDefined, isFunction, isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { is, pattern, pipe, prop, val } from '../common/hof';\nimport { Resolvable } from '../resolve/resolvable';\nimport { services } from '../common/coreservices';\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(stateObject) {\n        var stateDec = stateObject.self;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            var newStateDec = {};\n            copy(stateDec, newStateDec);\n            newStateDec.url += '{remainder:any}'; // match any path (.*)\n            stateDec = newStateDec;\n        }\n        var parent = stateObject.parent;\n        var parsed = parseUrl(stateDec.url);\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, { state: stateDec });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + stateObject + \"'\");\n        return parsed && parsed.root ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : state.parent ? state.parent.navigable : null;\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, state.self); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams\n            .concat(nonUrlParams)\n            .map(function (p) { return [p.id, p]; })\n            .reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({\n            token: token,\n            val: resolveObj[token],\n            deps: undefined,\n            policy: resolvePolicies[token],\n        }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || 'deferred';\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) {\n        return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n    };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) {\n        return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val)));\n    };\n    /** extracts the token from a Provider or provide literal */\n    var getToken = function (p) { return p.provide || p.token; };\n    // prettier-ignore: Given a literal resolve or provider object, returns a Resolvable\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(getToken(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(getToken(p), p.useFactory, p.deps || p.dependencies, p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(getToken(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(getToken(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(getToken(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    // prettier-ignore\n    var tuple2Resolvable = pattern([\n        [pipe(prop('val'), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop('val'), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop('val'), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    // prettier-ignore\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error('Invalid resolve value: ' + stringify(obj)); },],\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = /** @class */ (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(''); };\n        var isRoot = function (state) { return state.name === ''; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder],\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || '';\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join('.');\n        }\n        if (!state.parent)\n            return '';\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + '.' + name : name;\n    };\n    return StateBuilder;\n}());\nexport { StateBuilder };\n//# sourceMappingURL=stateBuilder.js.map","var TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase || (TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope || (TransitionHookScope = {}));\nexport { TransitionHookPhase, TransitionHookScope };\n//# sourceMappingURL=interface.js.map","import { defaults, values, find, inherit } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Glob } from '../common/glob';\nimport { isObject, isFunction } from '../common/predicates';\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = /** @class */ (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name),\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + '.' + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return (this.parent && this.parent.root()) || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = (opts.inherit && this.parent && this.parent.parameters()) || [];\n        return inherited\n            .concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return ((this.url && this.url.parameter(id, opts)) ||\n            find(values(this.params), propEq('id', id)) ||\n            (opts.inherit && this.parent && this.parent.parameter(id)));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is a [[StateDeclaration]] object */\n    StateObject.isStateDeclaration = function (obj) { return isFunction(obj['$$state']); };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) { return isObject(obj['__stateObjectCache']); };\n    return StateObject;\n}());\nexport { StateObject };\n//# sourceMappingURL=stateObject.js.map","/** @packageDocumentation @publicapi @module state */\nimport { isString } from '../common/predicates';\nimport { values } from '../common/common';\nimport { safeConsole } from '../common/safeConsole';\nvar StateMatcher = /** @class */ (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || '';\n        return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== '')\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (_state) { return _state.__stateObjectCache.nameGlob && _state.__stateObjectCache.nameGlob.matches(name); });\n            if (matches.length > 1) {\n                safeConsole.error(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split('.');\n        var pathLength = splitName.length;\n        var i = 0, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === '' && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === '^') {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join('.');\n        return current.name + (current.name && relName ? '.' : '') + relName;\n    };\n    return StateMatcher;\n}());\nexport { StateMatcher };\n//# sourceMappingURL=stateMatcher.js.map","/** @packageDocumentation @publicapi @module state */\nimport { inArray, isString, prop } from '../common';\nimport { StateObject } from './stateObject';\n/** @internalapi */\nvar StateQueueManager = /** @class */ (function () {\n    function StateQueueManager(router, states, builder, listeners) {\n        this.router = router;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error('State must have a valid name');\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) { return _this.states.hasOwnProperty(name) && _this.states[name]; };\n        var notifyListeners = function () {\n            if (registered.length) {\n                _this.listeners.forEach(function (listener) { return listener('registered', registered.map(function (s) { return s.self; })); });\n            }\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + '.**');\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.router.stateRegistry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                notifyListeners();\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        notifyListeners();\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        var rulesApi = this.router.urlService.rules;\n        rulesApi.rule(rulesApi.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexport { StateQueueManager };\n//# sourceMappingURL=stateQueueManager.js.map","/** @packageDocumentation @publicapi @module state */\nimport { StateMatcher } from './stateMatcher';\nimport { StateBuilder } from './stateBuilder';\nimport { StateQueueManager } from './stateQueueManager';\nimport { removeFrom } from '../common/common';\nimport { propEq } from '../common/hof';\nvar StateRegistry = /** @class */ (function () {\n    /** @internalapi */\n    function StateRegistry(router) {\n        this.router = router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(router, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true },\n            },\n            abstract: true,\n        };\n        var _root = (this._root = this.stateQueue.register(rootStateDef));\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var _children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return _children.length === 0 ? _children : _children.concat(getChildren(_children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (_state) {\n            var rulesApi = _this.router.urlService.rules;\n            // Remove URL rule\n            rulesApi\n                .rules()\n                .filter(propEq('state', _state))\n                .forEach(function (rule) { return rulesApi.removeRule(rule); });\n            // Remove state from registry\n            delete _this.states[_state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener('deregistered', deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return (found && found.self) || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexport { StateRegistry };\n//# sourceMappingURL=stateRegistry.js.map","/** @packageDocumentation @publicapi @module transition */\nimport { TransitionHookPhase } from './interface';\nimport { defaults, noop, silentRejection } from '../common/common';\nimport { fnToString, maxLength } from '../common/strings';\nimport { isPromise } from '../common/predicates';\nimport { is, parse } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { Rejection } from './rejectFactory';\nimport { TargetState } from '../state/targetState';\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = /** @class */ (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () { return _this.type.hookPhase === TransitionHookPhase.RUN && !_this.options.transition.isActive(); };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) { return prev.then(function () { return nextHook.invokeHook(); }); };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult).then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () { return hook.callback.call(options.bind, _this.transition, _this.stateContext); };\n        var normalizeErr = function (err) { return Rejection.normalize(err).toPromise(); };\n        var handleError = function (err) { return hook.eventType.getErrorHandler(_this)(err); };\n        var handleResult = function (result) { return hook.eventType.getResultHandler(_this)(result); };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr).then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n        finally {\n            if (hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit) {\n                hook.deregister();\n            }\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted('Hook aborted transition').toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) { return hook.logError(Rejection.normalize(err)); });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) { return hook.logError(error); }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) { return silentRejection(error); }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexport { TransitionHook };\n//# sourceMappingURL=transitionHook.js.map","/** @packageDocumentation @publicapi @module transition */\nimport { isString, isFunction, Glob, extend, removeFrom, tail, values, identity, mapObj } from '../common';\nimport { // has or is using\nTransitionHookScope, } from './interface';\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state, criterion, transition) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state, transition);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = /** @class */ (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, removeHookFromRegistry, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.removeHookFromRegistry = removeHookFromRegistry;\n        this.invokeCount = 0;\n        this._deregistered = false;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this.invokeLimit = options.invokeLimit;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion, transition) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion, transition); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return mapObj(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges, transition) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name], transition);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges, transition) {\n        var matches = this._getMatchingNodes(treeChanges, transition);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    RegisteredHook.prototype.deregister = function () {\n        this.removeHookFromRegistry(this);\n        this._deregistered = true;\n    };\n    return RegisteredHook;\n}());\nexport { RegisteredHook };\n/** @hidden Return a registration function of the requested type. */\nexport function makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = (registry._registeredHooks = registry._registeredHooks || {});\n    var hooks = (_registeredHooks[eventType.name] = []);\n    var removeHookFn = removeFrom(hooks);\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, removeHookFn, options);\n        hooks.push(registeredHook);\n        return registeredHook.deregister.bind(registeredHook);\n    }\n    return hookRegistrationFn;\n}\n//# sourceMappingURL=hookRegistry.js.map","/** @packageDocumentation @publicapi @module transition */\nimport { extend, assertPredicate, unnestR, identity } from '../common/common';\nimport { isArray } from '../common/predicates';\nimport { TransitionHookPhase, TransitionHookScope, } from './interface';\nimport { TransitionHook } from './transitionHook';\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = /** @class */ (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi\n            ._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges, transition);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current,\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges, transition);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node },\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks\n            .map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges, transition) {\n        var isCreate = hookType.hookPhase === TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries\n            .map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges, transition); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexport { HookBuilder };\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map","/** @packageDocumentation @publicapi @module transition */\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { stringify } from '../common/strings';\nimport { map, find, extend, mergeR, tail, omit, arrayTuples, unnestR, identity, anyTrueR } from '../common/common';\nimport { isObject, isUndefined } from '../common/predicates';\nimport { prop, propEq, val, not, is } from '../common/hof';\nimport { TransitionHookPhase, } from './interface'; // has or is using\nimport { TransitionHook } from './transitionHook';\nimport { matchState, makeEvent } from './hookRegistry';\nimport { HookBuilder } from './hookBuilder';\nimport { PathUtils } from '../path/pathUtils';\nimport { Param } from '../params/param';\nimport { Resolvable } from '../resolve/resolvable';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { Rejection } from './rejectFactory';\nimport { flattenR, uniqR } from '../common';\n/** @hidden */\nvar stateSelf = prop('self');\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = /** @class */ (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () { return _this.router.globals.transition === _this; };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi\n            ._getEvents()\n            .filter(function (type) { return type.hookPhase !== TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to, this)) ||\n            (compare.from && !matchState(this.$from(), compare.from, this)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return Object.freeze(this._treeChanges[pathname].map(prop('paramValues')).reduce(mergeR, {}));\n    };\n    Transition.prototype.paramsChanged = function () {\n        var fromParams = this.params('from');\n        var toParams = this.params('to');\n        // All the parameters declared on both the \"to\" and \"from\" paths\n        var allParamDescriptors = []\n            .concat(this._treeChanges.to)\n            .concat(this._treeChanges.from)\n            .map(function (pathNode) { return pathNode.paramSchema; })\n            .reduce(flattenR, [])\n            .reduce(uniqR, []);\n        var changedParamDescriptors = Param.changed(allParamDescriptors, fromParams, toParams);\n        return changedParamDescriptors.reduce(function (changedValues, descriptor) {\n            changedValues[descriptor.id] = toParams[descriptor.id];\n            return changedValues;\n        }, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `myResolve` resolve\n     *   // even though `foo.bar` also has a `myResolve` resolve\n     *   var fooData = trans.injector('foo').get('myResolve');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `myResolve` from the state being exited\n     *   var fooData = trans.injector(null, 'from').get('myResolve');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = 'to'; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * Allows a transition hook to dynamically add a Resolvable to this Transition.\n     *\n     * Use the [[Transition.injector]] to retrieve the resolved data in subsequent hooks ([[UIInjector.get]]).\n     *\n     * If a `state` argument is provided, the Resolvable is processed when that state is being entered.\n     * If no `state` is provided then the root state is used.\n     * If the given `state` has already been entered, the Resolvable is processed when any child state is entered.\n     * If no child states will be entered, the Resolvable is processed during the `onFinish` phase of the Transition.\n     *\n     * The `state` argument also scopes the resolved data.\n     * The resolved data is available from the injector for that `state` and any children states.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = ''; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = typeof state === 'string' ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state'))\n            .map(stateSelf)\n            .reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = 'entering'; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path\n            .map(prop('views'))\n            .filter(identity)\n            .reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: 'redirect' };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = targetState.withOptions(newOptions, true);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams).filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return 'SameAsPending';\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return 'SameAsCurrent';\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) { return _this._hookBuilder.buildHooksForPhase(phase); };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns a transition rejection explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract) {\n            return Rejection.invalid(\"Cannot transition to abstract state '\" + state.name + \"'\");\n        }\n        var paramDefs = state.parameters();\n        var values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            var invalidValues = invalidParams.map(function (param) { return \"[\" + param.id + \":\" + stringify(values[param.id]) + \"]\"; }).join(', ');\n            var detail = \"The following parameter values are not valid for state '\" + state.name + \"': \" + invalidValues;\n            return Rejection.invalid(detail);\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return params['#'] !== null && params['#'] !== undefined ? params : omit(params, ['#']);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = stringify(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? '' : '(X) ', to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = stringify(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexport { Transition };\n//# sourceMappingURL=transition.js.map","/** @packageDocumentation @publicapi @module url */\nimport { map, inherit, identity, unnest, tail, find, allTrueR, unnestR, arrayTuples } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { isArray, isString, isDefined } from '../common/predicates';\nimport { Param, DefType } from '../params/param';\nimport { joinNeighborsR, splitOnDelim } from '../common/strings';\nimport { defaults } from '../common';\n/** @hidden */\nfunction quoteRegExp(str, param) {\n    var surroundPattern = ['', ''], result = str.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, '\\\\$&');\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:/(', ')|/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, _prop, fn) { return (obj[_prop] = obj[_prop] || fn()); };\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/** @hidden */\nvar defaultConfig = {\n    state: { params: {} },\n    strict: true,\n    caseInsensitive: true,\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = /** @class */ (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param paramFactory A [[ParamFactory]] object\n     * @param config  A [[UrlMatcherCompileConfig]] configuration object\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.config = config = defaults(config, defaultConfig);\n        this.pattern = pattern;\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var patterns = [];\n        var last = 0;\n        var matchArray;\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (str) {\n                return inherit(paramTypes.type(isSearch ? 'query' : 'path'), {\n                    pattern: new RegExp(str, _this.config.caseInsensitive ? 'i' : undefined),\n                });\n            };\n            return {\n                id: id,\n                regexp: regexp,\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp),\n            };\n        };\n        var details;\n        var segment;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((matchArray = placeholder.exec(pattern))) {\n            details = matchDetails(matchArray, false);\n            if (details.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(details.id);\n            this._params.push(paramFactory.fromPath(details.id, details.type, config.state));\n            this._segments.push(details.segment);\n            patterns.push([details.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                // tslint:disable-next-line:no-conditional-assignment\n                while ((matchArray = searchPlaceholder.exec(search))) {\n                    details = matchDetails(matchArray, true);\n                    checkParamErrors(details.id);\n                    this._params.push(paramFactory.fromSearch(details.id, details.type, config.state));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (_pattern) { return quoteRegExp.apply(null, _pattern); }).concat(quoteRegExp(segment));\n    }\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        // Replace dashes with encoded \"\\-\"\n        return encodeURIComponent(str).replace(/-/g, function (c) {\n            return \"%5C%\" + c\n                .charCodeAt(0)\n                .toString(16)\n                .toUpperCase();\n        });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== '' && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return (matcher._cache.segments =\n                matcher._cache.segments ||\n                    matcher._cache.path\n                        .map(UrlMatcher.pathSegmentsAndParams)\n                        .reduce(unnestR, [])\n                        .reduce(joinNeighborsR, [])\n                        .map(function (x) { return (isString(x) ? splitOnSlash(x) : x); })\n                        .reduce(unnestR, []));\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return (matcher._cache.weights =\n                matcher._cache.weights ||\n                    segments(matcher).map(function (segment) {\n                        // Sort slashes first, then static strings, the Params\n                        if (segment === '/')\n                            return 1;\n                        if (isString(segment))\n                            return 2;\n                        if (segment instanceof Param)\n                            return 3;\n                    }));\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var _pairs = arrayTuples(weightsA, weightsB);\n        var cmp, i;\n        for (i = 0; i < _pairs.length; i++) {\n            cmp = _pairs[i][0] - _pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '/?' : '',\n                '$',\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        // options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(paramVal) {\n            var reverseString = function (str) {\n                return str\n                    .split('')\n                    .reverse()\n                    .join('');\n            };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, '-'); };\n            var split = reverseString(paramVal).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values['#'] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) { return !param || param.validates(val); };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers\n            .map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return (isString(x) ? x : getDetails(x)); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers\n            .map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return acc.match(/\\/$/) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join('-');\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, '');\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams\n            .map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        })\n            .filter(identity)\n            .reduce(unnestR, [])\n            .join('&');\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : '') + (values['#'] ? '#' + values['#'] : '');\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexport { UrlMatcher };\n//# sourceMappingURL=urlMatcher.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/** @packageDocumentation @publicapi @module url */\nimport { extend, forEach, isDefined, isFunction, isObject } from '../common';\nimport { UrlMatcher } from './urlMatcher';\nimport { DefType, Param } from '../params';\n/** @internalapi */\nvar ParamFactory = /** @class */ (function () {\n    function ParamFactory(router) {\n        this.router = router;\n    }\n    ParamFactory.prototype.fromConfig = function (id, type, state) {\n        return new Param(id, type, DefType.CONFIG, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromPath = function (id, type, state) {\n        return new Param(id, type, DefType.PATH, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromSearch = function (id, type, state) {\n        return new Param(id, type, DefType.SEARCH, this.router.urlService.config, state);\n    };\n    return ParamFactory;\n}());\nexport { ParamFactory };\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n *\n * @internalapi\n */\nvar UrlMatcherFactory = /** @class */ (function () {\n    // TODO: move implementations to UrlConfig (urlService.config)\n    function UrlMatcherFactory(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = new ParamFactory(this.router);\n        /** @deprecated use [[UrlConfig.caseInsensitive]] */\n        this.caseInsensitive = function (value) { return _this.router.urlService.config.caseInsensitive(value); };\n        /** @deprecated use [[UrlConfig.defaultSquashPolicy]] */\n        this.defaultSquashPolicy = function (value) { return _this.router.urlService.config.defaultSquashPolicy(value); };\n        /** @deprecated use [[UrlConfig.strictMode]] */\n        this.strictMode = function (value) { return _this.router.urlService.config.strictMode(value); };\n        /** @deprecated use [[UrlConfig.type]] */\n        this.type = function (name, definition, definitionFn) {\n            return _this.router.urlService.config.type(name, definition, definitionFn) || _this;\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        var urlConfig = this.router.urlService.config;\n        // backward-compatible support for config.params -> config.state.params\n        var params = config && !config.state && config.params;\n        config = params ? __assign({ state: { params: params } }, config) : config;\n        var globalConfig = { strict: urlConfig._isStrictMode, caseInsensitive: urlConfig._isCaseInsensitive };\n        return new UrlMatcher(pattern, urlConfig.paramTypes, this.paramFactory, extend(globalConfig, config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        var urlConfig = this.router.urlService.config;\n        urlConfig.paramTypes.enqueue = false;\n        urlConfig.paramTypes._flushTypeQueue();\n        return this;\n    };\n    return UrlMatcherFactory;\n}());\nexport { UrlMatcherFactory };\n//# sourceMappingURL=urlMatcherFactory.js.map","import { UrlMatcher } from './urlMatcher';\nimport { isString, isDefined, isFunction } from '../common/predicates';\nimport { identity, extend } from '../common/common';\nimport { is, or, pattern } from '../common/hof';\nimport { StateObject } from '../state/stateObject';\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = /** @class */ (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var isState = StateObject.isState, isStateDeclaration = StateObject.isStateDeclaration;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [or(isState, isStateDeclaration), function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function matchUrlParamters(url) {\n            var params = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(params) && params;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: 'URLMATCHER' };\n        return extend(new BaseUrlRule(matchUrlParamters, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (stateOrDecl, router) {\n        var state = StateObject.isStateDeclaration(stateOrDecl) ? stateOrDecl.$$state() : stateOrDecl;\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: 'url' });\n            }\n        };\n        var details = { state: state, type: 'STATE' };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error('Rule RegExp must not be global or sticky');\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) { return match[what === '$' ? 0 : Number(what)]; });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var matchParamsFromRegexp = function (url) { return regexp.exec(url.path); };\n        var details = { regexp: regexp, type: 'REGEXP' };\n        return extend(new BaseUrlRule(matchParamsFromRegexp, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) { return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); }); };\n    return UrlRuleFactory;\n}());\nexport { UrlRuleFactory };\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = /** @class */ (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = 'RAW';\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\nexport { BaseUrlRule };\n//# sourceMappingURL=urlRule.js.map","/** @packageDocumentation @publicapi @module url */\nimport { stripLastPathElement } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return stripLastPathElement(baseHref) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n *\n * @internalapi\n */\nvar UrlRouter = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouter(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        // Delegate these calls to [[UrlService]]\n        /** @deprecated use [[UrlService.sync]]*/\n        this.sync = function (evt) { return _this.router.urlService.sync(evt); };\n        /** @deprecated use [[UrlService.listen]]*/\n        this.listen = function (enabled) { return _this.router.urlService.listen(enabled); };\n        /** @deprecated use [[UrlService.deferIntercept]]*/\n        this.deferIntercept = function (defer) { return _this.router.urlService.deferIntercept(defer); };\n        /** @deprecated use [[UrlService.match]]*/\n        this.match = function (urlParts) { return _this.router.urlService.match(urlParts); };\n        // Delegate these calls to [[UrlRules]]\n        /** @deprecated use [[UrlRules.initial]]*/\n        this.initial = function (handler) {\n            return _this.router.urlService.rules.initial(handler);\n        };\n        /** @deprecated use [[UrlRules.otherwise]]*/\n        this.otherwise = function (handler) {\n            return _this.router.urlService.rules.otherwise(handler);\n        };\n        /** @deprecated use [[UrlRules.removeRule]]*/\n        this.removeRule = function (rule) { return _this.router.urlService.rules.removeRule(rule); };\n        /** @deprecated use [[UrlRules.rule]]*/\n        this.rule = function (rule) { return _this.router.urlService.rules.rule(rule); };\n        /** @deprecated use [[UrlRules.rules]]*/\n        this.rules = function () { return _this.router.urlService.rules.rules(); };\n        /** @deprecated use [[UrlRules.sort]]*/\n        this.sort = function (compareFn) { return _this.router.urlService.rules.sort(compareFn); };\n        /** @deprecated use [[UrlRules.when]]*/\n        this.when = function (matcher, handler, options) { return _this.router.urlService.rules.when(matcher, handler, options); };\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this.router.locationService;\n        if (read) {\n            this.location = $url.url();\n            return;\n        }\n        if ($url.url() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this.router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this.router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = '#' + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = !isHtml5 && url ? '/' : '';\n        var cfgPort = cfg.port();\n        var port = (cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n        /** @deprecated use [[UrlService.interceptDeferred]]*/\n        get: function () {\n            return this.router.urlService.interceptDeferred;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UrlRouter;\n}());\nexport { UrlRouter };\n//# sourceMappingURL=urlRouter.js.map","import { TargetState } from '../state';\nimport { UrlMatcher } from './urlMatcher';\nimport { is, isDefined, isFunction, isString, removeFrom, val } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nvar prioritySort = function (a, b) { return (b.priority || 0) - (a.priority || 0); };\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRules.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @publicapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/** @hidden */\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n/**\n * API for managing URL rules\n *\n * This API is used to create and manage URL rules.\n * URL rules are a mechanism to respond to specific URL patterns.\n *\n * The most commonly used methods are [[otherwise]] and [[when]].\n *\n * This API is a property of [[UrlService]] as [[UrlService.rules]]\n *\n * @publicapi\n */\nvar UrlRules = /** @class */ (function () {\n    /** @hidden */\n    function UrlRules(/** @hidden */ router) {\n        this.router = router;\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this._id = 0;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /** @hidden */\n    UrlRules.prototype.dispose = function (router) {\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /**\n     * Defines the initial state, path, or behavior to use when the app starts.\n     *\n     * This rule defines the initial/starting state for the application.\n     *\n     * This rule is triggered the first time the URL is checked (when the app initially loads).\n     * The rule is triggered only when the url matches either `\"\"` or `\"/\"`.\n     *\n     * Note: The rule is intended to be used when the root of the application is directly linked to.\n     * When the URL is *not* `\"\"` or `\"/\"` and doesn't match other rules, the [[otherwise]] rule is triggered.\n     * This allows 404-like behavior when an unknown URL is deep-linked.\n     *\n     * #### Example:\n     * Start app at `home` state.\n     * ```js\n     * .initial({ state: 'home' });\n     * ```\n     *\n     * #### Example:\n     * Start app at `/home` (by url)\n     * ```js\n     * .initial('/home');\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .initial((matchValue, url, router) => {\n     *   console.log('initial state');\n     *   return { state: 'home' };\n     * })\n     * ```\n     *\n     * @param handler The initial state or url path, or a function which returns the state or url path (or performs custom logic).\n     */\n    UrlRules.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    /**\n     * Defines the state, url, or behavior to use when no other rule matches the URL.\n     *\n     * This rule is matched when *no other rule* matches.\n     * It is generally used to handle unknown URLs (similar to \"404\" behavior, but on the client side).\n     *\n     * - If `handler` a string, it is treated as a url redirect\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `/index`\n     * ```js\n     * .otherwise('/index');\n     * ```\n     *\n     * - If `handler` is an object with a `state` property, the state is activated.\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `home` and provide a `dashboard` parameter value.\n     * ```js\n     * .otherwise({ state: 'home', params: { dashboard: 'default' } });\n     * ```\n     *\n     * - If `handler` is a function, the function receives the current url ([[UrlParts]]) and the [[UIRouter]] object.\n     *   The function can perform actions, and/or return a value.\n     *\n     * #### Example:\n     * When no other url rule matches, manually trigger a transition to the `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   router.stateService.go('home');\n     * });\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   return { state: 'home' };\n     * });\n     * ```\n     *\n     * @param handler The url path to redirect to, or a function which returns the url path (or performs custom logic).\n     */\n    UrlRules.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     */\n    UrlRules.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[urlRuleFactory]], or created manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRules.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error('invalid rule');\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /**\n     * Gets all registered rules\n     *\n     * @returns an array of all the registered rules\n     */\n    UrlRules.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.concat(this._otherwiseFn ? [this._otherwiseFn] : []);\n    };\n    /**\n     * Defines URL Rule priorities\n     *\n     * More than one rule ([[UrlRule]]) might match a given URL.\n     * This `compareFn` is used to sort the rules by priority.\n     * Higher priority rules should sort earlier.\n     *\n     * The [[defaultRuleSortFn]] is used by default.\n     *\n     * You only need to call this function once.\n     * The `compareFn` will be used to sort the rules as each is registered.\n     *\n     * If called without any parameter, it will re-sort the rules.\n     *\n     * ---\n     *\n     * Url rules may come from multiple sources: states's urls ([[StateDeclaration.url]]), [[when]], and [[rule]].\n     * Each rule has a (user-provided) [[UrlRule.priority]], a [[UrlRule.type]], and a [[UrlRule.$id]]\n     * The `$id` is is the order in which the rule was registered.\n     *\n     * The sort function should use these data, or data found on a specific type\n     * of [[UrlRule]] (such as [[StateRule.state]]), to order the rules as desired.\n     *\n     * #### Example:\n     * This compare function prioritizes rules by the order in which the rules were registered.\n     * A rule registered earlier has higher priority.\n     *\n     * ```js\n     * function compareFn(a, b) {\n     *   return a.$id - b.$id;\n     * }\n     * ```\n     *\n     * @param compareFn a function that compares to [[UrlRule]] objects.\n     *    The `compareFn` should abide by the `Array.sort` compare function rules.\n     *    Given two rules, `a` and `b`, return a negative number if `a` should be higher priority.\n     *    Return a positive number if `b` should be higher priority.\n     *    Return `0` if the rules are identical.\n     *\n     *    See the [mozilla reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)\n     *    for details.\n     */\n    UrlRules.prototype.sort = function (compareFn) {\n        var sorted = this.stableSort(this._rules, (this._sortFn = compareFn || this._sortFn));\n        // precompute _sortGroup values and apply to each rule\n        var group = 0;\n        for (var i = 0; i < sorted.length; i++) {\n            sorted[i]._group = group;\n            if (i < sorted.length - 1 && this._sortFn(sorted[i], sorted[i + 1]) !== 0) {\n                group++;\n            }\n        }\n        this._rules = sorted;\n        this._sorted = true;\n    };\n    /** @hidden */\n    UrlRules.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /** @hidden */\n    UrlRules.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0 ? wrapperA.idx - wrapperB.idx : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Registers a `matcher` and `handler` for custom URLs handling.\n     *\n     * The `matcher` can be:\n     *\n     * - a [[UrlMatcher]]: See: [[UrlMatcherFactory.compile]]\n     * - a `string`: The string is compiled to a [[UrlMatcher]]\n     * - a `RegExp`: The regexp is used to match the url.\n     *\n     * The `handler` can be:\n     *\n     * - a string: The url is redirected to the value of the string.\n     * - a function: The url is redirected to the return value of the function.\n     *\n     * ---\n     *\n     * When the `handler` is a `string` and the `matcher` is a `UrlMatcher` (or string), the redirect\n     * string is interpolated with parameter values.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(\"/foo/:param1\", \"/bar/:param1\")\n     * ```\n     *\n     * ---\n     *\n     * When the `handler` is a string and the `matcher` is a `RegExp`, the redirect string is\n     * interpolated with capture groups from the RegExp.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), \"/bar/$1\");\n     * ```\n     *\n     * ---\n     *\n     * When the handler is a function, it receives the matched value, the current URL, and the `UIRouter` object (See [[UrlRuleHandlerFn]]).\n     * The \"matched value\" differs based on the `matcher`.\n     * For [[UrlMatcher]]s, it will be the matched state params.\n     * For `RegExp`, it will be the match array from `regexp.exec()`.\n     *\n     * If the handler returns a string, the URL is redirected to the string.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), match => \"/bar/\" + match[1]);\n     * ```\n     *\n     * Note: the `handler` may also invoke arbitrary code, such as `$state.go()`\n     *\n     * @param matcher A pattern `string` to match, compiled as a [[UrlMatcher]], or a `RegExp`.\n     * @param handler The path to redirect to, or a function that returns the path.\n     * @param options `{ priority: number }`\n     *\n     * @return the registered [[UrlRule]]\n     */\n    UrlRules.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    return UrlRules;\n}());\nexport { UrlRules };\n//# sourceMappingURL=urlRules.js.map","/** @packageDocumentation @publicapi @module view */\nimport { equals, applyPairs, removeFrom, inArray, find } from '../common/common';\nimport { curry, prop } from '../common/hof';\nimport { isString, isArray } from '../common/predicates';\nimport { trace } from '../common/trace';\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = /** @class */ (function () {\n    /** @hidden */\n    function ViewService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this._uiViews = [];\n        /** @hidden */ this._viewConfigs = [];\n        /** @hidden */ this._viewConfigFactories = {};\n        /** @hidden */ this._listeners = [];\n        /** @internalapi */\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIView: function (id) { return find(_this._uiViews, function (view) { return _this.router.$id + \".\" + view.id === id; }); },\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n            _onSync: function (listener) {\n                _this._listeners.push(listener);\n                return function () { return removeFrom(_this._listeners, listener); };\n            },\n        };\n    }\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = ''; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split('@');\n        var uiViewName = viewAtContext[0] || '$default'; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : '^'; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = ''; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchorState = uiViewContextAnchor.split('.').reduce(function (anchor, x) { return anchor.parent; }, context);\n            uiViewContextAnchor = anchorState.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /** @hidden */\n    ViewService.prototype._rootViewContext = function (context) {\n        return (this._rootContext = context || this._rootContext);\n    };\n    /** @hidden */\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error('ViewService: No view config factory registered for type ' + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('<- Removing', viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('-> Registering', viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) { return (context && context.parent ? stateDepth(context.parent) + 1 : 1); };\n            return uiView.fqn.split('.').length * 10000 + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return { uiView: uiView, viewConfig: matchingConfigs[0] };\n        };\n        var configureUIView = function (tuple) {\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(tuple.uiView) !== -1)\n                tuple.uiView.configUpdated(tuple.viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var uiViewTuples = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        var matchedViewConfigs = uiViewTuples.map(function (tuple) { return tuple.viewConfig; });\n        var unmatchedConfigTuples = this._viewConfigs\n            .filter(function (config) { return !inArray(matchedViewConfigs, config); })\n            .map(function (viewConfig) { return ({ uiView: undefined, viewConfig: viewConfig }); });\n        uiViewTuples.forEach(configureUIView);\n        var allTuples = uiViewTuples.concat(unmatchedConfigTuples);\n        this._listeners.forEach(function (cb) { return cb(allTuples); });\n        trace.traceViewSync(allTuples);\n    };\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent('-> Registering', uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent('!!!! duplicate uiView named:', uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent('Tried removing non-registered uiView', uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent('<- Deregistering', uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop('fqn'));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop('$config')).map(prop('name'));\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split('.');\n        var uivSegments = uiView.fqn.split('.');\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = 1 - vcSegments.length || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join('.');\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexport { ViewService };\n//# sourceMappingURL=view.js.map","/** @packageDocumentation @publicapi @module core */\nimport { StateParams } from './params/stateParams';\nimport { Queue } from './common/queue';\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = /** @class */ (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexport { UIRouterGlobals };\n//# sourceMappingURL=globals.js.map","import { ParamTypes } from '../params';\nimport { isDefined, isString } from '../common';\n/**\n * An API to customize the URL behavior and retrieve URL configuration\n *\n * This API is used to customize the behavior of the URL.\n * This includes optional trailing slashes ([[strictMode]]), case sensitivity ([[caseInsensitive]]),\n * and custom parameter encoding (custom [[type]]).\n *\n * It also has information about the location (url) configuration such as [[port]] and [[baseHref]].\n * This information can be used to build absolute URLs, such as\n * `https://example.com:443/basepath/state/substate?param1=a#hashvalue`;\n *\n * This API is a property of [[UrlService]] as [[UrlService.config]].\n */\nvar UrlConfig = /** @class */ (function () {\n    /** @hidden */ function UrlConfig(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @internalapi */ this.dispose = function () { return _this.paramTypes.dispose(); };\n        // Delegate these calls to the current LocationConfig implementation\n        /**\n         * Gets the base Href, e.g., `http://localhost/approot/`\n         *\n         * @return the application's base href\n         */\n        this.baseHref = function () { return _this.router.locationConfig.baseHref(); };\n        /**\n         * Gets or sets the hashPrefix\n         *\n         * This only applies when not running in [[html5Mode]] (pushstate mode)\n         *\n         * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n         *\n         * @return the hash prefix\n         */\n        this.hashPrefix = function (newprefix) { return _this.router.locationConfig.hashPrefix(newprefix); };\n        /**\n         * Gets the host, e.g., `localhost`\n         *\n         * @return the protocol\n         */\n        this.host = function () { return _this.router.locationConfig.host(); };\n        /**\n         * Returns true when running in pushstate mode\n         *\n         * @return true when running in html5 mode (pushstate mode).\n         */\n        this.html5Mode = function () { return _this.router.locationConfig.html5Mode(); };\n        /**\n         * Gets the port, e.g., `80`\n         *\n         * @return the port number\n         */\n        this.port = function () { return _this.router.locationConfig.port(); };\n        /**\n         * Gets the protocol, e.g., `http`\n         *\n         * @return the protocol\n         */\n        this.protocol = function () { return _this.router.locationConfig.protocol(); };\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * #### Example:\n     * ```js\n     * // Allow case insensitive url matches\n     * urlService.config.caseInsensitive(true);\n     * ```\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlConfig.prototype.caseInsensitive = function (value) {\n        return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * #### Example:\n     * ```js\n     * // Remove default parameter values from the url\n     * urlService.config.defaultSquashPolicy(true);\n     * ```\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *      parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *      the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlConfig.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * #### Example:\n     * ```js\n     * // Allow optional trailing slashes\n     * urlService.config.strictMode(false);\n     * ```\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlConfig.prototype.strictMode = function (value) {\n        return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n    };\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A custom parameter type can be used to generate URLs with typed parameters or custom encoding/decoding.\n     *\n     * #### Note: Register custom types *before using them* in a state definition.\n     *\n     * #### Example:\n     * ```js\n     * // Encode object parameter as JSON string\n     * urlService.config.type('myjson', {\n     *   encode: (obj) => JSON.stringify(obj),\n     *   decode: (str) => JSON.parse(str),\n     *   is: (val) => typeof(val) === 'object',\n     *   pattern: /[^/]+/,\n     *   equals: (a, b) => _.isEqual(a, b),\n     * });\n     * ```\n     *\n     * See [[ParamTypeDefinition]] for more examples\n     *\n     * @param name The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     */\n    UrlConfig.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    return UrlConfig;\n}());\nexport { UrlConfig };\n//# sourceMappingURL=urlConfig.js.map","import { extend, is, isString, pattern } from '../common';\nimport { UrlRules } from './urlRules';\nimport { UrlConfig } from './urlConfig';\nimport { TargetState } from '../state';\n/** API for URL management */\nvar UrlService = /** @class */ (function () {\n    /** @hidden */\n    function UrlService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.interceptDeferred = false;\n        /**\n         * The nested [[UrlRules]] API for managing URL rules and rewrites\n         *\n         * See: [[UrlRules]] for details\n         */\n        this.rules = new UrlRules(this.router);\n        /**\n         * The nested [[UrlConfig]] API to configure the URL and retrieve URL information\n         *\n         * See: [[UrlConfig]] for details\n         */\n        this.config = new UrlConfig(this.router);\n        // Delegate these calls to the current LocationServices implementation\n        /**\n         * Gets the current url, or updates the url\n         *\n         * ### Getting the current URL\n         *\n         * When no arguments are passed, returns the current URL.\n         * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n         *\n         * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n         * have a base HREF prepended ([[PushStateLocationServices]]).\n         *\n         * The raw URL in the browser might be:\n         *\n         * ```\n         * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * or\n         *\n         * ```\n         * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * then this method returns:\n         *\n         * ```\n         * /internal/path/123?param1=foo#anchor\n         * ```\n         *\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(); // \"/some/path?query=value#anchor\"\n         * ```\n         *\n         * ### Updating the URL\n         *\n         * When `newurl` arguments is provided, changes the URL to reflect `newurl`\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(\"/some/path?query=value#anchor\", true);\n         * ```\n         *\n         * @param newurl The new value for the URL.\n         *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n         *               It should not include the protocol, site, port, or base path of an absolute HREF.\n         * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n         * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n         *\n         * @return the url (after potentially being processed)\n         */\n        this.url = function (newurl, replace, state) {\n            return _this.router.locationService.url(newurl, replace, state);\n        };\n        /**\n         * Gets the path part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n         *\n         * @return the path portion of the url\n         */\n        this.path = function () { return _this.router.locationService.path(); };\n        /**\n         * Gets the search part of the current url as an object\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n         *\n         * @return the search (query) portion of the url, as an object\n         */\n        this.search = function () { return _this.router.locationService.search(); };\n        /**\n         * Gets the hash part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n         *\n         * @return the hash (anchor) portion of the url\n         */\n        this.hash = function () { return _this.router.locationService.hash(); };\n        /**\n         * @internalapi\n         *\n         * Registers a low level url change handler\n         *\n         * Note: Because this is a low level handler, it's not recommended for general use.\n         *\n         * #### Example:\n         * ```js\n         * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n         * ```\n         *\n         * @param callback a function that will be called when the url is changing\n         * @return a function that de-registers the callback\n         */\n        this.onChange = function (callback) { return _this.router.locationService.onChange(callback); };\n    }\n    /** @hidden */\n    UrlService.prototype.dispose = function () {\n        this.listen(false);\n        this.rules.dispose();\n    };\n    /**\n     * Gets the current URL parts\n     *\n     * This method returns the different parts of the current URL (the [[path]], [[search]], and [[hash]]) as a [[UrlParts]] object.\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    /**\n     * Activates the best rule for the current URL\n     *\n     * Checks the current URL for a matching [[UrlRule]], then invokes that rule's handler.\n     * This method is called internally any time the URL has changed.\n     *\n     * This effectively activates the state (or redirect, etc) which matches the current URL.\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   // Find the matching URL and invoke the handler.\n     *   urlService.sync();\n     * });\n     * ```\n     */\n    UrlService.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var _a = this.router, urlService = _a.urlService, stateService = _a.stateService;\n        var url = { path: urlService.path(), search: urlService.search(), hash: urlService.hash() };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return urlService.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return stateService.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return stateService.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, this.router));\n    };\n    /**\n     * Starts or stops listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes UI-Router to start listening for changes to the URL, if it wasn't already listening.\n     *\n     * If called with `false`, UI-Router will stop listening (call listen(true) to start listening again).\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   // Start responding to URL changes\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param enabled `true` or `false` to start or stop listening to URL changes\n     */\n    UrlService.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopListeningFn && this._stopListeningFn();\n            delete this._stopListeningFn;\n        }\n        else {\n            return (this._stopListeningFn = this._stopListeningFn || this.router.urlService.onChange(function (evt) { return _this.sync(evt); }));\n        }\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * // Prevent UI-Router from automatically intercepting URL changes when it starts;\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlService.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    /**\n     * Matches a URL\n     *\n     * Given a URL (as a [[UrlParts]] object), check all rules and determine the best matching rule.\n     * Return the result as a [[MatchResult]].\n     */\n    UrlService.prototype.match = function (url) {\n        var _this = this;\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules.rules();\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this.router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && best.rule._group !== rules[i]._group)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = !best || (current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    return UrlService;\n}());\nexport { UrlService };\n//# sourceMappingURL=urlService.js.map","/** @packageDocumentation @publicapi @module core */\nimport { UrlMatcherFactory } from './url/urlMatcherFactory';\nimport { UrlRouter } from './url/urlRouter';\nimport { TransitionService } from './transition/transitionService';\nimport { ViewService } from './view/view';\nimport { StateRegistry } from './state/stateRegistry';\nimport { StateService } from './state/stateService';\nimport { UIRouterGlobals } from './globals';\nimport { values, removeFrom } from './common/common';\nimport { isFunction } from './common/predicates';\nimport { UrlService } from './url/urlService';\nimport { trace } from './common/trace';\nimport { makeStub } from './common';\n/** @hidden */\nvar _routerInstance = 0;\n/** @hidden */\nvar locSvcFns = ['url', 'path', 'search', 'hash', 'onChange'];\n/** @hidden */\nvar locCfgFns = ['port', 'protocol', 'host', 'baseHref', 'html5Mode', 'hashPrefix'];\n/** @hidden */\nvar locationServiceStub = makeStub('LocationServices', locSvcFns);\n/** @hidden */\nvar locationConfigStub = makeStub('LocationConfig', locCfgFns);\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = /** @class */ (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** @hidden plugin instances are registered here */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlService);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error('Required property `name` missing on plugin: ' + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return (this._plugins[pluginInstance.name] = pluginInstance);\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\nexport { UIRouter };\n//# sourceMappingURL=router.js.map","/** @packageDocumentation @internalapi @module hooks */\nimport { Transition } from '../transition/transition';\nimport { UIRouter } from '../router';\nimport { Resolvable } from '../resolve';\nimport { inArray, uniqR, unnestR, values } from '../common';\nfunction addCoreResolvables(trans) {\n    trans.addResolvable(Resolvable.fromData(UIRouter, trans.router), '');\n    trans.addResolvable(Resolvable.fromData(Transition, trans), '');\n    trans.addResolvable(Resolvable.fromData('$transition$', trans), '');\n    trans.addResolvable(Resolvable.fromData('$stateParams', trans.params()), '');\n    trans.entering().forEach(function (state) {\n        trans.addResolvable(Resolvable.fromData('$state$', state), state);\n    });\n}\nexport var registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\nvar TRANSITION_TOKENS = ['$transition$', Transition];\nvar isTransition = inArray(TRANSITION_TOKENS);\n// References to Transition in the treeChanges pathnodes makes all\n// previous Transitions reachable in memory, causing a memory leak\n// This function removes resolves for '$transition$' and `Transition` from the treeChanges.\n// Do not use this on current transitions, only on old ones.\nexport var treeChangesCleanup = function (trans) {\n    var nodes = values(trans.treeChanges())\n        .reduce(unnestR, [])\n        .reduce(uniqR, []);\n    // If the resolvable is a Transition, return a new resolvable with null data\n    var replaceTransitionWithNull = function (r) {\n        return isTransition(r.token) ? Resolvable.fromData(r.token, null) : r;\n    };\n    nodes.forEach(function (node) {\n        node.resolvables = node.resolvables.map(replaceTransitionWithNull);\n    });\n};\n//# sourceMappingURL=coreResolvables.js.map","/** @packageDocumentation @internalapi @module hooks */\nimport { isString, isFunction } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { TargetState } from '../state/targetState';\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexport var registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map","/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexport var registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexport var registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexport var registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @packageDocumentation @internalapi @module hooks */\nimport { noop } from '../common/common';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { val } from '../common/hof';\nexport var RESOLVE_HOOK_PRIORITY = 1000;\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath, { priority: 1000 });`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('EAGER', trans).then(noop);\n};\nexport var registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState, { priority: 1000 });`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath('LAZY', trans)\n        .then(noop);\n};\nexport var registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves any dynamically added (LAZY or EAGER) Resolvables.\n *\n * Registered using `transitionService.onFinish({}, eagerResolvePath, { priority: 1000 });`\n *\n * After all entering states have been entered, this hook resolves any remaining Resolvables.\n * These are typically dynamic resolves which were added by some Transition Hook using [[Transition.addResolvable]].\n *\n * See [[StateDeclaration.resolve]]\n */\nvar resolveRemaining = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('LAZY', trans).then(noop);\n};\nexport var registerResolveRemaining = function (transitionService) {\n    return transitionService.onFinish({}, resolveRemaining, { priority: RESOLVE_HOOK_PRIORITY });\n};\n//# sourceMappingURL=resolve.js.map","/** @packageDocumentation @internalapi @module hooks */\nimport { noop } from '../common/common';\nimport { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views('entering');\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nexport var registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views('entering');\n    var exitingViews = transition.views('exiting');\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexport var registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map","import { copy } from '../common/common';\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexport var registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map","/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexport var registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map","import { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === 'STATE') {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition\n        .entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nexport var registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nexport function lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] = services.$q\n            .when(lazyLoadFn(transition, state))\n            .then(updateStateRegistry)\n            .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (_state) { return transition.router.stateRegistry.register(_state); });\n        }\n        return result;\n    }\n    return promise;\n}\n//# sourceMappingURL=lazyLoad.js.map","import { TransitionHook } from './transitionHook';\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = /** @class */ (function () {\n    /* tslint:disable:no-inferrable-types */\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexport { TransitionEventType };\n//# sourceMappingURL=transitionEventType.js.map","/** @packageDocumentation @internalapi @module hooks */\nimport { trace } from '../common/trace';\nimport { Rejection } from '../transition/rejectFactory';\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nexport var registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map","/** @packageDocumentation @internalapi @module hooks */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error().toString());\n    }\n}\nexport var registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map","/** @packageDocumentation @publicapi @module transition */\nimport { TransitionHookScope, TransitionHookPhase, } from './interface';\nimport { Transition } from './transition';\nimport { makeEvent } from './hookRegistry';\nimport { registerAddCoreResolvables, treeChangesCleanup } from '../hooks/coreResolvables';\nimport { registerRedirectToHook } from '../hooks/redirectTo';\nimport { registerOnExitHook, registerOnRetainHook, registerOnEnterHook } from '../hooks/onEnterExitRetain';\nimport { registerEagerResolvePath, registerLazyResolveState, registerResolveRemaining } from '../hooks/resolve';\nimport { registerLoadEnteringViews, registerActivateViews } from '../hooks/views';\nimport { registerUpdateGlobalState } from '../hooks/updateGlobals';\nimport { registerUpdateUrl } from '../hooks/url';\nimport { registerLazyLoadHook } from '../hooks/lazyLoad';\nimport { TransitionEventType } from './transitionEventType';\nimport { TransitionHook } from './transitionHook';\nimport { isDefined } from '../common/predicates';\nimport { removeFrom, values, createProxyFunctions } from '../common/common';\nimport { val } from '../common/hof';\nimport { registerIgnoredTransitionHook } from '../hooks/ignoredTransition';\nimport { registerInvalidTransitionHook } from '../hooks/invalidTransition';\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport var defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    supercede: true,\n    custom: {},\n    current: function () { return null; },\n    source: 'unknown',\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = /** @class */ (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = (createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]));\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n        _router.globals.successfulTransitions.onEvict(treeChangesCleanup);\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) {\n            return hooksArray.forEach(function (hook) {\n                hook._deregistered = true;\n                removeFrom(hooksArray, hook);\n            });\n        });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var SYNCHRONOUS = true;\n        this._defineEvent('onCreate', Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent('onBefore', Phase.BEFORE, 0, paths.to);\n        this._defineEvent('onStart', Phase.RUN, 0, paths.to);\n        this._defineEvent('onExit', Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent('onRetain', Phase.RUN, 200, paths.retained);\n        this._defineEvent('onEnter', Phase.RUN, 300, paths.entering);\n        this._defineEvent('onFinish', Phase.RUN, 400, paths.to);\n        this._defineEvent('onSuccess', Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent('onError', Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = TransitionHookScope.STATE, TRANSITION = TransitionHookScope.TRANSITION;\n        this._definePathType('to', TRANSITION);\n        this._definePathType('from', TRANSITION);\n        this._definePathType('exiting', STATE);\n        this._definePathType('retained', STATE);\n        this._definePathType('entering', STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    /** @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase)\n            ? this._eventTypes.filter(function (type) { return type.hookPhase === phase; })\n            : this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        fns.resolveAll = registerResolveRemaining(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexport { TransitionService };\n//# sourceMappingURL=transitionService.js.map","/** @packageDocumentation @publicapi @module state */\nimport { createProxyFunctions, defaults, extend, inArray, noop, removeFrom, silenceUncaughtInPromise, silentRejection, } from '../common/common';\nimport { isDefined, isObject, isString } from '../common/predicates';\nimport { Queue } from '../common/queue';\nimport { services } from '../common/coreservices';\nimport { PathUtils } from '../path/pathUtils';\nimport { PathNode } from '../path/pathNode';\nimport { defaultTransOpts } from '../transition/transitionService';\nimport { Rejection, RejectType } from '../transition/rejectFactory';\nimport { TargetState } from './targetState';\nimport { Param } from '../params/param';\nimport { Glob } from '../common/glob';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { lazyLoadState } from '../hooks/lazyLoad';\nimport { not, val } from '../common/hof';\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = /** @class */ (function () {\n    /** @internalapi */\n    function StateService(/** @hidden */ router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () {\n            return this.router.globals.transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () {\n            return this.router.globals.params;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () {\n            return this.router.globals.current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () {\n            return this.router.globals.$current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(this.router.stateRegistry, fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState =\n            options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        return new TargetState(this.router.stateRegistry, identifier, params, options);\n    };\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () { return globals.transition; };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        if (options.supercede === false && getCurrent()) {\n            return Rejection.ignored('Another transition is in progress and supercede has been set to false in TransitionOptions for the transition. So the transition was ignored in favour of the existing one in progress.').toPromise();\n        }\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (trans) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId <= trans.$id;\n                if (error.type === RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = trans.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = state && options.lossy ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, { absolute: options.absolute });\n    };\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return (this._defaultErrorHandler = handler || this._defaultErrorHandler);\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error('Can not lazy load ' + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(this.router.stateRegistry, currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexport { StateService };\n//# sourceMappingURL=stateService.js.map","/** @packageDocumentation @internalapi @module vanilla */\nimport { isArray, isObject } from '../common/index';\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexport var $q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) {\n        return new Promise(function (resolve, reject) {\n            reject(val);\n        });\n    },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises).map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) {\n                    acc[tuple.key] = tuple.val;\n                    return acc;\n                }, {});\n            });\n        }\n    },\n};\n//# sourceMappingURL=q.js.map","/** @packageDocumentation @internalapi @module vanilla */\nimport { extend, assertPredicate, isFunction, isArray, isInjectable, } from '../common/index';\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexport var $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    },\n};\n//# sourceMappingURL=injector.js.map","/** @packageDocumentation @internalapi @module vanilla */\nimport { identity, unnestR, isArray, splitEqual, splitHash, splitQuery, } from '../common';\nexport var keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexport var getParams = function (queryString) {\n    return queryString\n        .split('&')\n        .filter(identity)\n        .map(splitEqual)\n        .reduce(keyValsToObjectR, {});\n};\nexport function parseUrl(url) {\n    var orEmptyString = function (x) { return x || ''; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexport var buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject)\n        .map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + '=' + val; });\n    })\n        .reduce(unnestR, [])\n        .join('&');\n    return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\nexport function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (uiRouter) {\n        var service = (uiRouter.locationService = new serviceClass(uiRouter));\n        var configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n//# sourceMappingURL=utils.js.map","/** @packageDocumentation @internalapi @module vanilla */\nimport { deregAll, isDefined, removeFrom, root } from '../common';\nimport { buildUrl, getParams, parseUrl } from './utils';\n/** A base `LocationServices` */\nvar BaseLocationServices = /** @class */ (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listeners = [];\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this.hash = function () { return parseUrl(_this._get()).hash; };\n        this.path = function () { return parseUrl(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl(_this._get()).search); };\n        this._location = root.location;\n        this._history = root.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                this._listeners.forEach(function (cb) { return cb({ url: url }); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexport { BaseLocationServices };\n//# sourceMappingURL=baseLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @packageDocumentation @internalapi @module vanilla */\nimport { root, trimHashVal } from '../common';\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = /** @class */ (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        root.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\nexport { HashLocationService };\n//# sourceMappingURL=hashLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @packageDocumentation @internalapi @module vanilla */\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = /** @class */ (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\nexport { MemoryLocationService };\n//# sourceMappingURL=memoryLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseLocationServices } from './baseLocationService';\nimport { root, splitHash, splitQuery, stripLastPathElement } from '../common';\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = /** @class */ (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        root.addEventListener('popstate', _this._listener, false);\n        return _this;\n    }\n    /**\n     * Gets the base prefix without:\n     * - trailing slash\n     * - trailing filename\n     * - protocol and hostname\n     *\n     * If <base href='/base/'>, this returns '/base'.\n     * If <base href='/foo/base/'>, this returns '/foo/base'.\n     * If <base href='/base/index.html'>, this returns '/base'.\n     * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n     * If <base href='/base'>, this returns ''.\n     * If <base href='http://localhost:8080'>, this returns ''.\n     * If <base href='http://localhost:8080/'>, this returns ''.\n     *\n     * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n     */\n    PushStateLocationService.prototype._getBasePrefix = function () {\n        return stripLastPathElement(this._config.baseHref());\n    };\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        var basePrefix = this._getBasePrefix();\n        var exactBaseHrefMatch = pathname === this._config.baseHref();\n        var startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n        pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n        return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var basePrefix = this._getBasePrefix();\n        var slash = url && url[0] !== '/' ? '/' : '';\n        var fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n        if (replace) {\n            this._history.replaceState(state, title, fullUrl);\n        }\n        else {\n            this._history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('popstate', this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\nexport { PushStateLocationService };\n//# sourceMappingURL=pushStateLocationService.js.map","import { isDefined } from '../common/predicates';\nimport { noop } from '../common/common';\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = /** @class */ (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this.dispose = noop;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = 'http';\n        this._host = 'localhost';\n        this._hashPrefix = '';\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return (isDefined(newval) ? (_this._hashPrefix = newval) : _this._hashPrefix); };\n    }\n    return MemoryLocationConfig;\n}());\nexport { MemoryLocationConfig };\n//# sourceMappingURL=memoryLocationConfig.js.map","/** @packageDocumentation @internalapi @module vanilla */\nimport { isDefined, isUndefined } from '../common/predicates';\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = /** @class */ (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = '';\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? (this._hashPrefix = newprefix) : this._hashPrefix;\n    };\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        if (isDefined(href))\n            this._baseHref = href;\n        if (isUndefined(this._baseHref))\n            this._baseHref = this.getBaseHref();\n        return this._baseHref;\n    };\n    BrowserLocationConfig.prototype.getBaseHref = function () {\n        var baseTag = document.getElementsByTagName('base')[0];\n        if (baseTag && baseTag.href) {\n            return baseTag.href.replace(/^([^/:]*:)?\\/\\/[^/]*/, '');\n        }\n        return this._isHtml5 ? '/' : location.pathname || '/';\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexport { BrowserLocationConfig };\n//# sourceMappingURL=browserLocationConfig.js.map","/** @packageDocumentation @internalapi @module vanilla */\nimport { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\nexport function servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: 'vanilla.services', $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map","/** @internalapi */\nvar UIRouterPluginBase = /** @class */ (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\nexport { UIRouterPluginBase };\n//# sourceMappingURL=interface.js.map","var noImpl = function (fnname) { return function () {\n    throw new Error(\"No implementation for \" + fnname + \". The framework specific code did not implement this method.\");\n}; };\nexport var makeStub = function (service, methods) {\n    return methods.reduce(function (acc, key) { return ((acc[key] = noImpl(service + \".\" + key + \"()\")), acc); }, {});\n};\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexport { services };\n//# sourceMappingURL=coreservices.js.map","/** @publicapi @module ng1 */ /** */\nimport * as ng_from_import from 'angular';\n/** @hidden */ var ng_from_global = angular;\n/** @hidden */ export var ng = ng_from_import && ng_from_import.module ? ng_from_import : ng_from_global;\n//# sourceMappingURL=angular.js.map","import { pick, forEach, tail, extend, isArray, isInjectable, isDefined, isString, services, trace, ViewService, ResolveContext, Resolvable, } from '@uirouter/core';\n/** @internalapi */\nexport function getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || services.$injector.get('$templateFactory');\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\n/** @internalapi */\nvar hasAnyKey = function (keys, obj) { return keys.reduce(function (acc, key) { return acc || isDefined(obj[key]); }, false); };\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n *\n * @internalapi\n */\nexport function ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return isDefined(state[key]); }).join(', ')));\n    }\n    var views = {}, viewsObject = state.views || { $default: pick(state, allViewKeys) };\n    forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || '$default';\n        // Account for views: { header: \"headerComponent\" }\n        if (isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join('|') + \" with: \" + nonCompKeys.join('|') + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = 'ng1';\n        config.$context = state;\n        config.$name = name;\n        var normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\n/** @hidden */\nvar id = 0;\n/** @internalapi */\nvar Ng1ViewConfig = /** @class */ (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component\n                ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings)\n                : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = services.$q;\n        var context = new ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context)),\n        };\n        return $q.all(promises).then(function (results) {\n            trace.traceViewServiceEvent('Loaded', _this);\n            _this.controller = results.controller;\n            extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\nexport { Ng1ViewConfig };\n//# sourceMappingURL=views.js.map","/** @publicapi @module view */ /** */\nimport { ng as angular } from './angular';\nimport { isArray, isDefined, isFunction, isObject, services, tail, kebobString, unnestR, Resolvable, } from '@uirouter/core';\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = /** @class */ (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = angular.version.minor < 3;\n        /** @hidden */ this.$get = [\n            '$http',\n            '$templateCache',\n            '$injector',\n            function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            },\n        ];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = '<ui-view></ui-view>';\n        var asTemplate = function (result) { return services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return isDefined(config.template)\n            ? asTemplate(this.fromString(config.template, params))\n            : isDefined(config.templateUrl)\n                ? asTemplate(this.fromUrl(config.templateUrl, params))\n                : isDefined(config.templateProvider)\n                    ? asTemplate(this.fromProvider(config.templateProvider, params, context))\n                    : isDefined(config.component)\n                        ? asComponent(config.component)\n                        : isDefined(config.componentProvider)\n                            ? asComponent(this.fromComponentProvider(config.componentProvider, params, context))\n                            : asTemplate(defaultTemplate);\n    };\n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return isFunction(template) ? template(params) : template;\n    };\n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http\n                .get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = angular.version.minor >= 3 ? '::' : '';\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = (fn && services.$injector.annotate(fn)) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(',') + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component)\n            .map(attributeTpl)\n            .join(' ');\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    return TemplateFactory;\n}());\nexport { TemplateFactory };\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = services.$injector.get(name + 'Directive'); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) {\n    return Object.keys(bindingsObj || {})\n        // [ 'input', [ '=foo', '=', 'foo' ] ]\n        .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n        // skip malformed values\n        .filter(function (tuple) { return isDefined(tuple) && isArray(tuple[1]); })\n        // { name: ('foo' || 'input'), type: '=' }\n        .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); });\n};\n//# sourceMappingURL=templateFactory.js.map","/** @publicapi @module ng1 */ /** */\nimport { val, isObject, createProxyFunctions, } from '@uirouter/core';\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = /** @class */ (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        createProxyFunctions(val(StateProvider.prototype), this, val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\nexport { StateProvider };\n//# sourceMappingURL=stateProvider.js.map","/** @publicapi @module ng1 */ /** */\nimport { services, ResolveContext, extend, } from '@uirouter/core';\nimport { getLocals } from '../services';\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n *\n * @internalapi\n */\nexport var getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(stateObject, parentFn) {\n        var hook = stateObject[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new ResolveContext(trans.treeChanges(pathname));\n            var subContext = resolveContext.subContext(state.$$state());\n            var locals = extend(getLocals(subContext), { $state$: state, $transition$: trans });\n            return services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @publicapi @module ng1 */ /** */\nimport { isDefined } from '@uirouter/core';\nimport { val, createProxyFunctions, removeFrom, isObject } from '@uirouter/core';\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n * @internalapi\n */\nvar Ng1LocationServices = /** @class */ (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = val($locationProvider);\n        createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (x) {\n            return x != null ? x.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : x;\n        };\n        pathType.decode = function (x) {\n            return x != null ? x.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : x;\n        };\n    };\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.baseHref = function () {\n        return this._baseHref || (this._baseHref = this.$browser.baseHref() || this.$window.location.pathname);\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (isDefined(newUrl))\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser, $window) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        this.$browser = $browser;\n        this.$window = $window;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on('$locationChangeSuccess', function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = val($location);\n        // Bind these LocationService functions to $location\n        createProxyFunctions(_loc, this, _loc, ['replace', 'path', 'search', 'hash']);\n        // Bind these LocationConfig functions to $location\n        createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n    };\n    return Ng1LocationServices;\n}());\nexport { Ng1LocationServices };\n//# sourceMappingURL=locationServices.js.map","/** @publicapi @module url */ /** */\nimport { BaseUrlRule, } from '@uirouter/core';\nimport { services, isString, isFunction, isArray, identity } from '@uirouter/core';\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @internalapi\n * @deprecated\n */\nvar UrlRouterProvider = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouterProvider(/** @hidden */ router) {\n        this.router = router;\n    }\n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) { return services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params }); };\n    };\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlService = this.router.urlService;\n        this.router.urlRouter.update(true);\n        if (!urlService.interceptDeferred)\n            urlService.listen();\n        return this.router.urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () { return ruleFn(services.$injector, _this.router.locationService); };\n        var rule = new BaseUrlRule(match, identity);\n        this.router.urlService.rules.rule(rule);\n        return this;\n    };\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRules = this.router.urlService.rules;\n        if (isString(rule)) {\n            urlRules.otherwise(rule);\n        }\n        else if (isFunction(rule)) {\n            urlRules.otherwise(function () { return rule(services.$injector, _this.router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (isArray(handler) || isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this.router, handler);\n        }\n        this.router.urlService.rules.when(what, handler);\n        return this;\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this.router.urlService.deferIntercept(defer);\n    };\n    return UrlRouterProvider;\n}());\nexport { UrlRouterProvider };\n//# sourceMappingURL=urlRouterProvider.js.map","/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @preferred @publicapi @module ng1\n */ /** */\nimport { ng as angular } from './angular';\nimport { services, applyPairs, isString, trace, extend, UIRouter, unnestR, } from '@uirouter/core';\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from './statebuilders/views';\nimport { TemplateFactory } from './templateFactory';\nimport { StateProvider } from './stateProvider';\nimport { getStateHookBuilder } from './statebuilders/onEnterExitRetain';\nimport { Ng1LocationServices } from './locationServices';\nimport { UrlRouterProvider } from './urlRouterProvider';\nangular.module('ui.router.angular1', []);\nvar mod_init = angular.module('ui.router.init', ['ng']);\nvar mod_util = angular.module('ui.router.util', ['ui.router.init']);\nvar mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\nvar mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = angular.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouterProvider.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouterProvider($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new UIRouter();\n    router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator('views', ng1ViewsBuilder);\n    router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\n    router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\n    router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\n    router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n    var ng1LocationService = (router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider));\n    Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $window, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return [\n    '$uiRouterProvider',\n    function ($urp) {\n        var service = $urp.router[serviceName];\n        service['$get'] = function () { return service; };\n        return service;\n    },\n]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    services.$injector = $injector;\n    services.$q = $q;\n    // https://github.com/angular-ui/ui-router/issues/3678\n    if (!$injector.hasOwnProperty('strictDi')) {\n        try {\n            $injector.invoke(function (checkStrictDi) { });\n        }\n        catch (error) {\n            $injector.strictDi = !!/strict mode/.exec(error && error.toString());\n        }\n    }\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry\n        .get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(unnestR, [])\n        .filter(function (x) { return x.deps === 'deferred'; })\n        .forEach(function (resolvable) { return (resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi)); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) { return (uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter)); };\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () { return extend(router.stateProvider, { $get: function () { return router.stateService; } }); };\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope) {\n    $rootScope.$watch(function () {\n        trace.approximateDigests++;\n    });\n}\nmod_init.provider('$uiRouter', $uiRouterProvider);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service('$trace', function () { return trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nexport var getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(applyPairs, {});\n};\n//# sourceMappingURL=services.js.map","/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @preferred @publicapi @module directives\n */ /** */\nimport { ng as angular } from '../angular';\nimport { extend, forEach, tail, isString, isObject, isArray, parse, noop, unnestR, identity, uniqR, inArray, removeFrom, } from '@uirouter/core';\n/** @hidden */\nfunction parseStateRef(ref) {\n    var parsed;\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/);\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, ' ').match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = parse('$cfg.path')($uiView);\n    return path ? tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === 'FORM';\n    return {\n        attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',\n        isAnchor: el.prop('tagName').toUpperCase() === 'A',\n        clickable: !isForm,\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition_1 = $timeout(function () {\n                if (!el.attr('disabled')) {\n                    $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n                }\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount_1 = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount_1-- <= 0)\n                    $timeout.cancel(transition_1);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: 'sref',\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSrefDirective;\nuiSrefDirective = [\n    '$uiRouter',\n    '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val) {\n                        rawDef.uiStateParams = extend({}, val);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            },\n        };\n    },\n];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiStateDirective;\nuiStateDirective = [\n    '$uiRouter',\n    '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return ((acc[attr] = noop), acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            },\n        };\n    },\n];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * Arrays are also supported as values in the `ngClass`-like interface.\n * This allows multiple states to add `active` class.\n *\n * #### Example:\n * Given the following template, with \"admin.roles\" being the current state, the class will be added too:\n * ```html\n * <div ui-sref-active=\"{'active': ['owner.**', 'admin.**']}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the `<div>` and `<a>` elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActiveDirective;\nuiSrefActiveDirective = [\n    '$state',\n    '$stateParams',\n    '$interpolate',\n    '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: 'A',\n            controller: [\n                '$scope',\n                '$element',\n                '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [];\n                    var activeEqClass;\n                    var uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    setStatesFromDefinitionObject(uiSrefActive);\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, noop);\n                    }\n                    $scope.$on('$destroy', setupEventListeners());\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function setupEventListeners() {\n                        var deregisterStatesChangedListener = $uiRouter.stateRegistry.onStatesChanged(handleStatesChanged);\n                        var deregisterOnStartListener = $uiRouter.transitionService.onStart({}, updateAfterTransition);\n                        var deregisterStateChangeSuccessListener = $scope.$on('$stateChangeSuccess', update);\n                        return function cleanUp() {\n                            deregisterStatesChangedListener();\n                            deregisterOnStartListener();\n                            deregisterStateChangeSuccessListener();\n                        };\n                    }\n                    function handleStatesChanged() {\n                        setStatesFromDefinitionObject(uiSrefActive);\n                    }\n                    function setStatesFromDefinitionObject(statesDefinition) {\n                        if (isObject(statesDefinition)) {\n                            states = [];\n                            forEach(statesDefinition, function (stateOrName, activeClass) {\n                                // Helper function to abstract adding state.\n                                var addStateForClass = function (stateOrName, activeClass) {\n                                    var ref = parseStateRef(stateOrName);\n                                    addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                                };\n                                if (isString(stateOrName)) {\n                                    // If state is string, just add it.\n                                    addStateForClass(stateOrName, activeClass);\n                                }\n                                else if (isArray(stateOrName)) {\n                                    // If state is an array, iterate over it and add each array item individually.\n                                    forEach(stateOrName, function (stateOrName) {\n                                        addStateForClass(stateOrName, activeClass);\n                                    });\n                                }\n                            });\n                        }\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass,\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) { return str.split(/\\s/).filter(identity); };\n                        var getClasses = function (stateList) {\n                            return stateList\n                                .map(function (x) { return x.activeClass; })\n                                .map(splitClasses)\n                                .reduce(unnestR, []);\n                        };\n                        var allClasses = getClasses(states)\n                            .concat(splitClasses(activeEqClass))\n                            .reduce(uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                },\n            ],\n        };\n    },\n];\nangular\n    .module('ui.router.state')\n    .directive('uiSref', uiSrefDirective)\n    .directive('uiSrefActive', uiSrefActiveDirective)\n    .directive('uiSrefActiveEq', uiSrefActiveDirective)\n    .directive('uiState', uiStateDirective);\n//# sourceMappingURL=stateDirectives.js.map","/** @publicapi @module directives */ /** */\nimport { extend, filter, isDefined, isFunction, isString, kebobString, noop, parse, ResolveContext, tail, trace, unnestR, } from '@uirouter/core';\nimport { ng as angular } from '../angular';\nimport { getLocals } from '../services';\nimport { Ng1ViewConfig } from '../statebuilders/views';\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * ### Attributes\n *\n * - `name`: (Optional) A view name.\n *   The name should be unique amongst the other views in the same state.\n *   You can have views of the same name that live in different states.\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n *\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n *   Uses [[$uiViewScroll]] to do the scrolling.\n *\n * - `onload`: Expression to evaluate whenever the view updates.\n *\n * #### Example:\n * A view can be unnamed or named.\n * ```html\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n *\n * <!-- Named (different style) -->\n * <ui-view name=\"viewName\"></ui-view>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n *\n * ```html\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n *\n * ```html\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * #### Examples for `autoscroll`:\n * ```html\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * #### Example:\n * ```js\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nexport var uiView;\nuiView = [\n    '$view',\n    '$animate',\n    '$uiViewScroll',\n    '$interpolate',\n    '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (angular.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (angular.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                },\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {},\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var previousEl, currentEl, currentScope, viewConfig, unregister;\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + '.' + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            // The context in which this ui-view \"tag\" was created\n                            var fromParentTagConfig = parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        },\n                    };\n                    trace.traceUIViewEvent('Linking', activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on('$destroy', function () {\n                        trace.traceUIViewEvent('Destroying/Unregistering', activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            trace.traceUIViewEvent('Removing (previous) el', previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            trace.traceUIViewEvent('Destroying scope', activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            trace.traceUIViewEvent('Animate out', _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave,\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if ((isDefined(autoScrollExp) && !autoScrollExp) || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            },\n        };\n        return directive;\n    },\n];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = parse('viewDecl.controllerAs');\n    var getResolveAs = parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: noop };\n                var resolveCtx = cfg.path && new ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = ($controller(controller, extend({}, locals, { $scope: scope, $element: $element })));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (isString(cfg.component)) {\n                    var kebobName = kebobString(cfg.component);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", 'i');\n                    var getComponentController = function () {\n                        var directiveEl = [].slice\n                            .call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && angular.element(directiveEl).data(\"$\" + cfg.component + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        },\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof angular.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (isFunction(controllerInstance.$onInit) && !((cfg.viewDecl.component || cfg.viewDecl.componentProvider) && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onUiParamsChanged\n    if (isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params('to');\n            var fromParams = $transition$.params('from');\n            var getNodeSchema = function (node) { return node.paramSchema; };\n            var toSchema = $transition$\n                .treeChanges('to')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            var fromSchema = $transition$\n                .treeChanges('from')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = filter(toParams, function (val, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && ((trans[cacheProp_1] && trans[cacheProp_1][id_1] === true) || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise;\n            var ids = (trans[cacheProp_1] = trans[cacheProp_1] || {});\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val) { return (ids[id_1] = val !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nangular.module('ui.router.state').directive('uiView', uiView);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n//# sourceMappingURL=viewDirective.js.map","/** @publicapi @module ng1 */ /** */\nimport { ng as angular } from './angular';\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nangular\n    .module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\nexport { $IsStateFilter, $IncludedByStateFilter };\n//# sourceMappingURL=stateFilters.js.map","/** @publicapi @module ng1 */ /** */\nimport { ng as angular } from './angular';\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = [\n        '$anchorScroll',\n        '$timeout',\n        function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        },\n    ];\n}\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n//# sourceMappingURL=viewScroll.js.map","export * from './services';\nexport * from './statebuilders/views';\nexport * from './stateProvider';\nexport * from './urlRouterProvider';\nimport './injectables';\nimport './directives/stateDirectives';\nimport './stateFilters';\nimport './directives/viewDirective';\nimport './viewScroll';\nexport default 'ui.router';\nimport * as core from '@uirouter/core';\nexport { core };\nexport * from '@uirouter/core';\n//# sourceMappingURL=index.js.map","import { ReplaySubject } from 'rxjs';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n/** Augments UIRouterGlobals with observables for transition starts, successful transitions, and state parameters */\nvar UIRouterRx = /** @class */ (function () {\n    function UIRouterRx(router) {\n        this.name = '@uirouter/rx';\n        this.deregisterFns = [];\n        var start$ = new ReplaySubject(1);\n        var success$ = start$.pipe(mergeMap(function (t) { return t.promise.then(function () { return t; }, function () { return null; }); }), filter(function (t) { return !!t; }));\n        var params$ = success$.pipe(map(function (transition) { return transition.params(); }));\n        var states$ = new ReplaySubject(1);\n        function onStatesChangedEvent(event, states) {\n            var changeEvent = {\n                currentStates: router.stateRegistry.get(),\n                registered: [],\n                deregistered: [],\n            };\n            if (event)\n                changeEvent[event] = states;\n            states$.next(changeEvent);\n        }\n        this.deregisterFns.push(router.transitionService.onStart({}, function (transition) { return start$.next(transition); }));\n        this.deregisterFns.push(router.stateRegistry.onStatesChanged(onStatesChangedEvent));\n        onStatesChangedEvent(null, null);\n        Object.assign(router.globals, { start$: start$, success$: success$, params$: params$, states$: states$ });\n    }\n    UIRouterRx.prototype.dispose = function () {\n        this.deregisterFns.forEach(function (deregisterFn) { return deregisterFn(); });\n        this.deregisterFns = [];\n    };\n    return UIRouterRx;\n}());\nexport { UIRouterRx };\nexport var UIRouterRxPlugin = UIRouterRx;\n//# sourceMappingURL=ui-router-rx.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @packageDocumentation @preferred @publicapi @module common\n */\nimport { isFunction, isString, isArray, isRegExp, isDate } from './predicates';\nimport { all, any, prop, curry, not } from './hof';\nimport { services } from './coreservices';\nexport var root = (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    this;\nvar angular = root.angular || {};\nexport var fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport var toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport var forEach = angular.forEach || _forEach;\nexport var extend = Object.assign || _extend;\nexport var equals = angular.equals || _equals;\nexport function identity(x) {\n    return x;\n}\nexport function noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nexport function createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) { return source()[fnName].bind(bind()); };\n    var makeLateRebindFn = function (fnName) {\n        return function lateRebindFunction() {\n            target[fnName] = bindFunction(fnName);\n            return target[fnName].apply(null, arguments);\n        };\n    };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport var inherit = function (parent, extra) { return extend(Object.create(parent), extra); };\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport var inArray = curry(_inArray);\nexport function _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexport var removeFrom = curry(_removeFrom);\nexport function _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nexport var pushTo = curry(_pushTo);\nexport function _pushTo(arr, val) {\n    return arr.push(val), val;\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexport var deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaultVals = extend.apply(void 0, __spreadArrays([{}], defaultsList.reverse()));\n    return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport var mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first, second) {\n    var path = [];\n    // tslint:disable-next-line:forin\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj, propNames) {\n    var objCopy = {};\n    for (var _prop in obj) {\n        if (propNames.indexOf(_prop) !== -1) {\n            objCopy[_prop] = obj[_prop];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return (result[key] = x); };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport var mapObj = map;\n/** Maps an array or object properties using a callback function */\nexport function map(collection, callback, target) {\n    target = target || (isArray(collection) ? [] : {});\n    forEach(collection, function (item, i) { return (target[i] = callback(item, i)); });\n    return target;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport var allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport var anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nexport var uniqR = function (acc, token) { return (inArray(acc, token) ? acc : pushR(acc, token)); };\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport var assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexport var assertMap = assertFn;\nexport function assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = 'assert failure'; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport var pairs = function (obj) { return Object.keys(obj).map(function (key) { return [key, obj[key]]; }); };\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var result = [];\n    var _loop_1 = function (i) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    };\n    for (var i = 0; i < maxArrayLen; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error('invalid parameters to applyPairs');\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nexport function tail(arr) {\n    return (arr.length && arr[arr.length - 1]) || undefined;\n}\n/**\n * shallow copy from src to dest\n */\nexport function copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nexport function _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var keys = {};\n    // tslint:disable-next-line:forin\n    for (var key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (var key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexport var silenceUncaughtInPromise = function (promise) { return promise.catch(function (e) { return 0; }) && promise; };\nexport var silentRejection = function (error) { return silenceUncaughtInPromise(services.$q.reject(error)); };\n//# sourceMappingURL=common.js.map","import { __decorate, __param, __spread } from 'tslib';\nimport { ElementRef, Inject, Input, Component, NgModule, Injector } from '@angular/core';\nimport { getAngularJSGlobal, getAngularLib, UpgradeModule, downgradeComponent } from '@angular/upgrade/static';\nimport { StateRegistry, UIRouter, Resolvable, forEach } from '@uirouter/core';\nimport { UIView, UIROUTER_MODULE_TOKEN, applyModuleConfig, makeChildProviders, UIRouterModule, UIROUTER_ROOT_MODULE, _UIROUTER_SERVICE_PROVIDERS, NATIVE_INJECTOR_TOKEN, ng2LazyLoadBuilder, Ng2ViewConfig } from '@uirouter/angular';\nimport { Ng1ViewConfig } from '@uirouter/angularjs';\nimport { UIRouterRx } from '@uirouter/rx';\n\nvar getAngularJS = getAngularJSGlobal || getAngularLib;\nvar angular = getAngularJS();\nif (!angular) {\n    throw new Error('AngularJS not found on window.  https://github.com/ui-router/angular-hybrid/wiki/AngularJS-not-found-on-window');\n}\n/**\n * Create a ng1 module for the ng1 half of the hybrid application to depend on.\n *\n * Example:\n * const myApp = angular.module('myApp', ['ui.router.upgrade']);\n */\nvar upgradeModule = angular.module('ui.router.upgrade', ['ui.router']);\nfunction objectFactory() {\n    return {};\n}\n/**\n * UIViewNgUpgrade is a component bridge from ng1 ui-view to ng2 ui-view\n *\n * When a ui-router for ng1 is registering a state it checks if a view's\n * `component:` is an ng2 Component class. If so, it creates a special ng1 template\n * which references this component, i.e., <ui-view-ng-upgrade></ui-view-ng-upgrade>\n *\n * See that code by searching ng1-to-ng2 source for: \"$stateProvider.decorator\"\n *\n * ---\n *\n * ng1-to-ng2 component bridge process:\n *\n * 1)\n * When an ng1 template creates a ui-view which is targeted by a ng2 Component,\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- ui-view created in ng1 template -->\n * </div> <!-- targeted with { component: Ng2RoutedComponent } -->\n * ```\n *\n * the state decorator spits out a custom template.  That template loads this\n * ng2 Component adapter as a downgraded-to-ng1 directive.\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- decorated template references the downgraded component -->\n *   <ui-view-ng-upgrade> <!-- downgraded adapter component -->\n *   </ui-view-ng-upgrade>\n * </div>\n * ```\n *\n * This downgraded ng2 Component then creates a child UIView (ng2 component)\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- custom template references the downgraded component -->\n *   <ui-view-ng-upgrade> <!-- ng2 component adapter downgraded to ng1-->\n *     <ui-view> <!-- pure ng2 ui-view -->\n *      </ui-view>\n *   </ui-view-ng-upgrade>\n * </div>\n * ```\n *\n * which in turn is filled with the routed ng2 component.\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- ng1 ui-view -->\n *   <ui-view-ng-upgrade> <!-- ng2 component adapter (downgraded to ng1)-->\n *     <ui-view> <!-- pure ng2 ui-view -->\n *       <ng2-routed-component> <!-- ng2 component hosted in ng2 ui-view -->\n *         <h1>ng2 routed component contents</h1>\n *       </ng2-routed-component>\n *     </ui-view>\n *   </ui-view-ng-upgrade>\n * </div>\n * ```\n *\n * This adapter exposes exposes the parent view context (ParentUIViewInject)\n * as an ng2 DI Provider, which the nested ng2 UIView requires.\n *\n * It gets the ParentUIViewContext information (from the parent ng1 ui-view) by walking\n * up the DOM and grabbing the .data('$uiView') which the ng1 ui-view directive exposes.\n */\nvar UIViewNgUpgrade = /** @class */ (function () {\n    function UIViewNgUpgrade(ref, parent, registry // access the root state\n    ) {\n        // From the ui-view-ng-upgrade component's element ref, walk up the DOM two elements...\n        // There will first be an ng1 ui-view which hosts this element, and then that ui-view's parent element.\n        // That (parent) element has access to the proper \"parent viewcontext\"\n        // The ng2 ui-view component is inside this ui-view-ng-upgrade directive, which is inside the ng1 \"host\" ui-view.\n        // Both ui-views share the same \"view context\" information (the view's fqn and created-by-state context information)\n        var ng1elem = angular\n            .element(ref.nativeElement)\n            .parent()\n            .parent();\n        // Expose getters on PARENT_INJECT for context (creation state) and fqn (view address)\n        // These will be used by further nested UIView\n        Object.defineProperty(parent, 'context', {\n            get: function () {\n                var data = ng1elem['inheritedData']('$uiView');\n                return data && data.$cfg ? data.$cfg.viewDecl.$context : registry.root();\n            },\n            enumerable: true,\n        });\n        Object.defineProperty(parent, 'fqn', {\n            get: function () {\n                var data = ng1elem['inheritedData']('$uiView');\n                return data && data.$uiView ? data.$uiView.fqn : null;\n            },\n            enumerable: true,\n        });\n    }\n    UIViewNgUpgrade.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [UIView.PARENT_INJECT,] }] },\n        { type: StateRegistry // access the root state\n         }\n    ]; };\n    __decorate([\n        Input()\n    ], UIViewNgUpgrade.prototype, \"name\", void 0);\n    UIViewNgUpgrade = __decorate([\n        Component({\n            selector: 'ui-view-ng-upgrade',\n            template: \"\\n    <ui-view [name]=\\\"name\\\"></ui-view>\\n  \",\n            // provide a blank object as PARENT_INJECT.\n            // The component will add property getters when it is constructed.\n            viewProviders: [{ provide: UIView.PARENT_INJECT, useFactory: objectFactory }]\n        }),\n        __param(1, Inject(UIView.PARENT_INJECT))\n    ], UIViewNgUpgrade);\n    return UIViewNgUpgrade;\n}());\n/**********************************\n * Ng2 @NgModule and bootstrap code\n **********************************/\n// Register the ng1 DI '$uiRouter' object as an ng2 Provider.\nfunction uiRouterUpgradeFactory(router, injector) {\n    var modules = injector.get(UIROUTER_MODULE_TOKEN, []);\n    modules.forEach(function (module) { return applyModuleConfig(router, injector, module); });\n    return router;\n}\nfunction getUIRouter($injector) {\n    return $injector.get('$uiRouter');\n}\nfunction getParentUIViewInject(r) {\n    return { fqn: null, context: r.root() };\n}\nvar ɵ0 = {};\n/**\n * This NgModule should be added to the root module of the hybrid app.\n */\nvar UIRouterUpgradeModule = /** @class */ (function () {\n    function UIRouterUpgradeModule() {\n    }\n    UIRouterUpgradeModule_1 = UIRouterUpgradeModule;\n    UIRouterUpgradeModule.forRoot = function (module) {\n        if (module === void 0) { module = {}; }\n        return {\n            ngModule: UIRouterUpgradeModule_1,\n            providers: makeChildProviders(module),\n        };\n    };\n    UIRouterUpgradeModule.forChild = function (module) {\n        if (module === void 0) { module = {}; }\n        return {\n            ngModule: UIRouterModule,\n            providers: makeChildProviders(module),\n        };\n    };\n    var UIRouterUpgradeModule_1;\n    UIRouterUpgradeModule = UIRouterUpgradeModule_1 = __decorate([\n        NgModule({\n            imports: [UIRouterModule, UpgradeModule],\n            declarations: [UIViewNgUpgrade],\n            providers: __spread([\n                // @uirouter/angular code will use the ng1 $uiRouter instance instead of creating its own.\n                { provide: '$uiRouter', useFactory: getUIRouter, deps: ['$injector'] },\n                { provide: UIRouter, useFactory: uiRouterUpgradeFactory, deps: ['$uiRouter', Injector] },\n                { provide: UIROUTER_ROOT_MODULE, useValue: ɵ0, multi: true },\n                { provide: UIView.PARENT_INJECT, useFactory: getParentUIViewInject, deps: [StateRegistry] }\n            ], _UIROUTER_SERVICE_PROVIDERS),\n            entryComponents: [UIViewNgUpgrade],\n            exports: [UIViewNgUpgrade, UIRouterModule],\n        })\n    ], UIRouterUpgradeModule);\n    return UIRouterUpgradeModule;\n}());\n// Downgrade the UIViewNgUpgrade ng2 Component to an ng1 directive.\n// The directive is used in a (generated) view template by the (host) ng1 ui-router,\n// whenever it finds a view configured with a `component: <Ng2ComponentClass>`\nupgradeModule.directive('uiViewNgUpgrade', downgradeComponent({\n    component: UIViewNgUpgrade,\n    inputs: ['name'],\n}));\nupgradeModule.run([\n    '$injector',\n    function (ng1Injector) {\n        var $uiRouter = ng1Injector.get('$uiRouter');\n        /** Add support for observable state and param changes */\n        $uiRouter.plugin(UIRouterRx);\n        // Expose a merged ng1/ng2 injector as a Resolvable (on the root state).\n        // This mimics how ui-router-ng2 exposes the root ng2 Injector, but\n        // it retrieves from ng1 injector first, then ng2 injector if the token isn't found.\n        var mergedInjector = {\n            get: function (token, ng2NotFoundValue) {\n                var ng2Injector = ng1Injector.get('$$angularInjector');\n                if (ng1Injector.has(token)) {\n                    return ng1Injector.get(token);\n                }\n                return ng2Injector.get(token, ng2NotFoundValue);\n            },\n        };\n        var ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, mergedInjector);\n        $uiRouter.stateRegistry.root().resolvables.push(ng2InjectorResolvable);\n    },\n]);\n/** Adds support for `loadChildren`: Angular NgModule lazy loading via @gntools/webpack */\nupgradeModule.config([\n    '$stateRegistryProvider',\n    function ($stateRegistry) {\n        $stateRegistry.decorator('lazyLoad', ng2LazyLoadBuilder);\n    },\n]);\n/**\n * Define a stateProvider `views` builder decorator.\n * The decorator first applies the standard views builder function.\n * Then it finds any view components which are **actually** a Ng2 Component Class.\n * It overwrites that view's config with a ng1-to-ng2 hybrid config.\n *\n * In place of the template provider, it simply puts a <ui-view-ng-upgrade/> component\n * which that provides a ng1 -> ng2 boundary in the component tree.\n */\nupgradeModule.config([\n    '$stateRegistryProvider',\n    function ($stateRegistry) {\n        $stateRegistry.decorator('views', function (state, parentFn) {\n            var views = parentFn(state);\n            forEach(views, function (viewDecl, viewName) {\n                if (viewDecl.$type === 'ng1-to-ng2' || typeof viewDecl.component === 'function') {\n                    // Update the view config.\n                    // Override default ng1 `component:` behavior (of defining a templateProvider)\n                    // with a <ui-view-ng-upgrade> adapter directive template\n                    viewDecl.$type = 'ng1-to-ng2';\n                    viewDecl.templateProvider = null;\n                    viewDecl.template = \"<ui-view-ng-upgrade name='\" + viewDecl.$uiViewName + \"'></ui-view-ng-upgrade>\";\n                }\n            });\n            return views;\n        });\n    },\n]);\n// UI-Router ViewConfig factories take a view declaration object from a state.views: { foo: <ViewDeclaration> }\n// and return a runtime config object (a ViewConfig)\nupgradeModule.run([\n    '$view',\n    '$templateFactory',\n    function ($view, $templateFactory) {\n        // Register a ViewConfig factory for views of type `ng2`\n        $view._pluginapi._viewConfigFactory('ng2', function (path, config) { return new Ng2ViewConfig(path, config); });\n        // Register a ViewConfig factory for views of type `ng1-to-ng2`.\n        // Returns both an ng1 config and an ng2 config allowing either ng1 or ng2 ui-view components to be targeted.\n        $view._pluginapi._viewConfigFactory('ng1-to-ng2', function (path, config) {\n            var ng1ViewConfig = (new Ng1ViewConfig(path, Object.assign({}, config, { $type: 'ng1' }), $templateFactory));\n            var ng2ViewConfig = (new Ng2ViewConfig(path, Object.assign({}, config, { $type: 'ng2' })));\n            return [ng2ViewConfig, ng1ViewConfig];\n        });\n    },\n]);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UIRouterUpgradeModule, UIViewNgUpgrade, getParentUIViewInject, getUIRouter, objectFactory, uiRouterUpgradeFactory, upgradeModule, ɵ0 };\n//# sourceMappingURL=uirouter-angular-hybrid.js.map\n","/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @packageDocumentation @module common_predicates\n */\nimport { and, not, pipe, prop, or } from './hof';\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof x === t; }; };\nexport var isUndefined = tis('undefined');\nexport var isDefined = not(isUndefined);\nexport var isNull = function (o) { return o === null; };\nexport var isNullOrUndefined = or(isNull, isUndefined);\nexport var isFunction = tis('function');\nexport var isNumber = tis('number');\nexport var isString = tis('string');\nexport var isObject = function (x) { return x !== null && typeof x === 'object'; };\nexport var isArray = Array.isArray;\nexport var isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexport var isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val) {\n    if (isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport var isPromise = and(isObject, pipe(prop('then'), isFunction));\n//# sourceMappingURL=predicates.js.map","import { ComponentFactoryResolver, ReflectiveInjector, ViewChild, ViewContainerRef, Input, Component, Inject, Directive, ElementRef, Renderer2, HostListener, Optional, EventEmitter, Output, ContentChildren, QueryList, Host, Self, InjectionToken, ANALYZE_FOR_ENTRY_COMPONENTS, APP_INITIALIZER, NgModule, NgModuleFactoryLoader, Compiler, NgModuleFactory, PLATFORM_ID, Injector } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy, PathLocationStrategy, CommonModule, isPlatformBrowser } from '@angular/common';\nimport { pick, forEach, isFunction, ViewService, services, parse, ResolveContext, unnestR, filter, trace, NATIVE_INJECTOR_TOKEN, inArray, UIRouter, isDefined, extend, isNumber, PathUtils, tail, Param, anyTrueR, identity, uniqR, UIRouterGlobals, TransitionService, isString, Resolvable, parseUrl, BaseLocationServices, is, BrowserLocationConfig, servicesPlugin, StateRegistry, StateService, UrlMatcherFactory, UrlRouter, UrlService } from '@uirouter/core';\nexport * from '@uirouter/core';\nimport { __decorate, __metadata, __param, __spread, __extends } from 'tslib';\nimport { ReplaySubject, of, from, concat, BehaviorSubject, combineLatest } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { UIRouterRx } from '@uirouter/rx';\n\n/** @module ng2 */ /** */\n/**\n * This is a [[StateBuilder.builder]] function for Angular `views`.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angular.\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\n * applies the state-level configuration to a view named `$default`.\n */\nfunction ng2ViewsBuilder(state) {\n    var views = {}, viewsObject = state.views || { $default: pick(state, ['component', 'bindings']) };\n    forEach(viewsObject, function (config, name) {\n        name = name || '$default'; // Account for views: { \"\": { template... } }\n        if (isFunction(config))\n            config = { component: config };\n        if (Object.keys(config).length === 0)\n            return;\n        config.$type = 'ng2';\n        config.$context = state;\n        config.$name = name;\n        var normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\nvar id = 0;\nvar Ng2ViewConfig = /** @class */ (function () {\n    function Ng2ViewConfig(path, viewDecl) {\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.$id = id++;\n        this.loaded = true;\n    }\n    Ng2ViewConfig.prototype.load = function () {\n        return services.$q.when(this);\n    };\n    return Ng2ViewConfig;\n}());\n\n/**\n * Merge two injectors\n *\n * This class implements the Injector ng2 interface but delegates\n * to the Injectors provided in the constructor.\n */\nvar MergeInjector = /** @class */ (function () {\n    function MergeInjector() {\n        var injectors = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            injectors[_i] = arguments[_i];\n        }\n        if (injectors.length < 2)\n            throw new Error('pass at least two injectors');\n        this.injectors = injectors;\n    }\n    /**\n     * Get the token from the first injector which contains it.\n     *\n     * Delegates to the first Injector.get().\n     * If not found, then delegates to the second Injector (and so forth).\n     * If no Injector contains the token, return the `notFoundValue`, or throw.\n     *\n     * @param token the DI token\n     * @param notFoundValue the value to return if none of the Injectors contains the token.\n     * @returns {any} the DI value\n     */\n    MergeInjector.prototype.get = function (token, notFoundValue) {\n        for (var i = 0; i < this.injectors.length; i++) {\n            var val = this.injectors[i].get(token, MergeInjector.NOT_FOUND);\n            if (val !== MergeInjector.NOT_FOUND)\n                return val;\n        }\n        if (arguments.length >= 2)\n            return notFoundValue;\n        // This will throw the DI Injector error\n        this.injectors[0].get(token);\n    };\n    MergeInjector.NOT_FOUND = {};\n    return MergeInjector;\n}());\n\n/** @hidden */\nvar id$1 = 0;\n/**\n * Given a component class, gets the inputs of styles:\n *\n * - @Input('foo') _foo\n * - `inputs: ['foo']`\n *\n * @internalapi\n */\nvar ng2ComponentInputs = function (factory) {\n    return factory.inputs.map(function (input) { return ({ prop: input.propName, token: input.templateName }); });\n};\nvar ɵ0 = ng2ComponentInputs;\n/**\n * A UI-Router viewport directive, which is filled in by a view (component) on a state.\n *\n * ### Selector\n *\n * A `ui-view` directive can be created as an element: `<ui-view></ui-view>` or as an attribute: `<div ui-view></div>`.\n *\n * ### Purpose\n *\n * This directive is used in a Component template (or as the root component) to create a viewport.  The viewport\n * is filled in by a view (as defined by a [[Ng2ViewDeclaration]] inside a [[Ng2StateDeclaration]]) when the view's\n * state has been activated.\n *\n * #### Example:\n * ```js\n * // This app has two states, 'foo' and 'bar'\n * stateRegistry.register({ name: 'foo', url: '/foo', component: FooComponent });\n * stateRegistry.register({ name: 'bar', url: '/bar', component: BarComponent });\n * ```\n * ```html\n * <!-- This ui-view will be filled in by the foo state's component or\n *      the bar state's component when the foo or bar state is activated -->\n * <ui-view></ui-view>\n * ```\n *\n * ### Named ui-views\n *\n * A `ui-view` may optionally be given a name via the attribute value: `<div ui-view='header'></div>`.  *Note:\n * an unnamed `ui-view` is internally named `$default`*.   When a `ui-view` has a name, it will be filled in\n * by a matching named view.\n *\n * #### Example:\n * ```js\n * stateRegistry.register({\n *   name: 'foo',\n *   url: '/foo',\n *   views: { header: HeaderComponent, $default: FooComponent });\n * ```\n * ```html\n * <!-- When 'foo' state is active, filled by HeaderComponent -->\n * <div ui-view=\"header\"></div>\n *\n * <!-- When 'foo' state is active, filled by FooComponent -->\n * <ui-view></ui-view>\n * ```\n */\nvar UIView = /** @class */ (function () {\n    function UIView(router, parent, viewContainerRef) {\n        this.router = router;\n        this.viewContainerRef = viewContainerRef;\n        /** Data about the this UIView */\n        this._uiViewData = {};\n        this._parent = parent;\n    }\n    UIView_1 = UIView;\n    Object.defineProperty(UIView.prototype, \"_name\", {\n        set: function (val) {\n            this.name = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UIView.prototype, \"state\", {\n        /**\n         * @returns the UI-Router `state` that is filling this uiView, or `undefined`.\n         */\n        get: function () {\n            return parse('_uiViewData.config.viewDecl.$context.self')(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UIView.prototype.ngOnInit = function () {\n        var _this = this;\n        var router = this.router;\n        var parentFqn = this._parent.fqn;\n        var name = this.name || '$default';\n        this._uiViewData = {\n            $type: 'ng2',\n            id: id$1++,\n            name: name,\n            fqn: parentFqn ? parentFqn + '.' + name : name,\n            creationContext: this._parent.context,\n            configUpdated: this._viewConfigUpdated.bind(this),\n            config: undefined,\n        };\n        this._deregisterUiCanExitHook = router.transitionService.onBefore({}, function (trans) {\n            return _this._invokeUiCanExitHook(trans);\n        });\n        this._deregisterUiOnParamsChangedHook = router.transitionService.onSuccess({}, function (trans) {\n            return _this._invokeUiOnParamsChangedHook(trans);\n        });\n        this._deregisterUIView = router.viewService.registerUIView(this._uiViewData);\n    };\n    /**\n     * For each transition, checks the component loaded in the ui-view for:\n     *\n     * - has a uiCanExit() component hook\n     * - is being exited\n     *\n     * If both are true, adds the uiCanExit component function as a hook to that singular Transition.\n     */\n    UIView.prototype._invokeUiCanExitHook = function (trans) {\n        var instance = this._componentRef && this._componentRef.instance;\n        var uiCanExitFn = instance && instance.uiCanExit;\n        if (isFunction(uiCanExitFn)) {\n            var state = this.state;\n            if (trans.exiting().indexOf(state) !== -1) {\n                trans.onStart({}, function () {\n                    return uiCanExitFn.call(instance, trans);\n                });\n            }\n        }\n    };\n    /**\n     * For each transition, checks if any param values changed and notify component\n     */\n    UIView.prototype._invokeUiOnParamsChangedHook = function ($transition$) {\n        var instance = this._componentRef && this._componentRef.instance;\n        var uiOnParamsChanged = instance && instance.uiOnParamsChanged;\n        if (isFunction(uiOnParamsChanged)) {\n            var viewState = this.state;\n            var resolveContext = new ResolveContext(this._uiViewData.config.path);\n            var viewCreationTrans = resolveContext.getResolvable('$transition$').data;\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams_1 = $transition$.params('to');\n            var fromParams_1 = $transition$.params('from');\n            var getNodeSchema = function (node) { return node.paramSchema; };\n            var toSchema = $transition$\n                .treeChanges('to')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            var fromSchema_1 = $transition$\n                .treeChanges('from')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema_1.indexOf(param);\n                return idx === -1 || !fromSchema_1[idx].type.equals(toParams_1[param.id], fromParams_1[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = filter(toParams_1, function (val, key) { return changedKeys_1.indexOf(key) !== -1; });\n                instance.uiOnParamsChanged(newValues, $transition$);\n            }\n        }\n    };\n    UIView.prototype._disposeLast = function () {\n        if (this._componentRef)\n            this._componentRef.destroy();\n        this._componentRef = null;\n    };\n    UIView.prototype.ngOnDestroy = function () {\n        if (this._deregisterUIView)\n            this._deregisterUIView();\n        if (this._deregisterUiCanExitHook)\n            this._deregisterUiCanExitHook();\n        if (this._deregisterUiOnParamsChangedHook)\n            this._deregisterUiOnParamsChangedHook();\n        this._deregisterUIView = this._deregisterUiCanExitHook = this._deregisterUiOnParamsChangedHook = null;\n        this._disposeLast();\n    };\n    /**\n     * The view service is informing us of an updated ViewConfig\n     * (usually because a transition activated some state and its views)\n     */\n    UIView.prototype._viewConfigUpdated = function (config) {\n        // The config may be undefined if there is nothing currently targeting this UIView.\n        // Dispose the current component, if there is one\n        if (!config)\n            return this._disposeLast();\n        // Only care about Ng2 configs\n        if (!(config instanceof Ng2ViewConfig))\n            return;\n        // The \"new\" viewconfig is already applied, so exit early\n        if (this._uiViewData.config === config)\n            return;\n        // This is a new ViewConfig.  Dispose the previous component\n        this._disposeLast();\n        trace.traceUIViewConfigUpdated(this._uiViewData, config && config.viewDecl.$context);\n        this._applyUpdatedConfig(config);\n        // Initiate change detection for the newly created component\n        this._componentRef.changeDetectorRef.markForCheck();\n    };\n    UIView.prototype._applyUpdatedConfig = function (config) {\n        this._uiViewData.config = config;\n        // Create the Injector for the routed component\n        var context = new ResolveContext(config.path);\n        var componentInjector = this._getComponentInjector(context);\n        // Get the component class from the view declaration. TODO: allow promises?\n        var componentClass = config.viewDecl.component;\n        // Create the component\n        var compFactoryResolver = componentInjector.get(ComponentFactoryResolver);\n        var compFactory = compFactoryResolver.resolveComponentFactory(componentClass);\n        this._componentRef = this._componentTarget.createComponent(compFactory, undefined, componentInjector);\n        // Wire resolves to @Input()s\n        this._applyInputBindings(compFactory, this._componentRef.instance, context, componentClass);\n    };\n    /**\n     * Creates a new Injector for a routed component.\n     *\n     * Adds resolve values to the Injector\n     * Adds providers from the NgModule for the state\n     * Adds providers from the parent Component in the component tree\n     * Adds a PARENT_INJECT view context object\n     *\n     * @returns an Injector\n     */\n    UIView.prototype._getComponentInjector = function (context) {\n        // Map resolves to \"useValue: providers\"\n        var resolvables = context\n            .getTokens()\n            .map(function (token) { return context.getResolvable(token); })\n            .filter(function (r) { return r.resolved; });\n        var newProviders = resolvables.map(function (r) { return ({ provide: r.token, useValue: context.injector().get(r.token) }); });\n        var parentInject = { context: this._uiViewData.config.viewDecl.$context, fqn: this._uiViewData.fqn };\n        newProviders.push({ provide: UIView_1.PARENT_INJECT, useValue: parentInject });\n        var parentComponentInjector = this.viewContainerRef.injector;\n        var moduleInjector = context.getResolvable(NATIVE_INJECTOR_TOKEN).data;\n        var mergedParentInjector = new MergeInjector(moduleInjector, parentComponentInjector);\n        return ReflectiveInjector.resolveAndCreate(newProviders, mergedParentInjector);\n    };\n    /**\n     * Supplies component inputs with resolve data\n     *\n     * Finds component inputs which match resolves (by name) and sets the input value\n     * to the resolve data.\n     */\n    UIView.prototype._applyInputBindings = function (factory, component, context, componentClass) {\n        var bindings = this._uiViewData.config.viewDecl['bindings'] || {};\n        var explicitBoundProps = Object.keys(bindings);\n        // Returns the actual component property for a renamed an input renamed using `@Input('foo') _foo`.\n        // return the `_foo` property\n        var renamedInputProp = function (prop) {\n            var input = factory.inputs.find(function (i) { return i.templateName === prop; });\n            return (input && input.propName) || prop;\n        };\n        // Supply resolve data to component as specified in the state's `bindings: {}`\n        var explicitInputTuples = explicitBoundProps.reduce(function (acc, key) { return acc.concat([{ prop: renamedInputProp(key), token: bindings[key] }]); }, []);\n        // Supply resolve data to matching @Input('prop') or inputs: ['prop']\n        var implicitInputTuples = ng2ComponentInputs(factory).filter(function (tuple) { return !inArray(explicitBoundProps, tuple.prop); });\n        var addResolvable = function (tuple) { return ({\n            prop: tuple.prop,\n            resolvable: context.getResolvable(tuple.token),\n        }); };\n        var injector = context.injector();\n        explicitInputTuples\n            .concat(implicitInputTuples)\n            .map(addResolvable)\n            .filter(function (tuple) { return tuple.resolvable && tuple.resolvable.resolved; })\n            .forEach(function (tuple) {\n            component[tuple.prop] = injector.get(tuple.resolvable.token);\n        });\n    };\n    var UIView_1;\n    UIView.PARENT_INJECT = 'UIView.PARENT_INJECT';\n    __decorate([\n        ViewChild('componentTarget', { read: ViewContainerRef, static: true }),\n        __metadata(\"design:type\", ViewContainerRef)\n    ], UIView.prototype, \"_componentTarget\", void 0);\n    __decorate([\n        Input('name'),\n        __metadata(\"design:type\", String)\n    ], UIView.prototype, \"name\", void 0);\n    __decorate([\n        Input('ui-view'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], UIView.prototype, \"_name\", null);\n    UIView = UIView_1 = __decorate([\n        Component({\n            selector: 'ui-view, [ui-view]',\n            exportAs: 'uiView',\n            template: \"\\n    <ng-template #componentTarget></ng-template>\\n    <ng-content *ngIf=\\\"!_componentRef\\\"></ng-content>\\n  \"\n        }),\n        __param(1, Inject(UIView_1.PARENT_INJECT)),\n        __metadata(\"design:paramtypes\", [UIRouter, Object, ViewContainerRef])\n    ], UIView);\n    return UIView;\n}());\n\n/** @module ng2 */ /** */\nfunction applyModuleConfig(uiRouter, injector, module) {\n    if (module === void 0) { module = {}; }\n    if (isFunction(module.config)) {\n        module.config(uiRouter, injector, module);\n    }\n    var states = module.states || [];\n    return states.map(function (state) { return uiRouter.stateRegistry.register(state); });\n}\nfunction applyRootModuleConfig(uiRouter, injector, module) {\n    isDefined(module.deferIntercept) && uiRouter.urlService.deferIntercept(module.deferIntercept);\n    isDefined(module.otherwise) && uiRouter.urlService.rules.otherwise(module.otherwise);\n    isDefined(module.initial) && uiRouter.urlService.rules.initial(module.initial);\n}\n\n/**\n * @internalapi\n * # blah blah blah\n */\nvar AnchorUISref = /** @class */ (function () {\n    function AnchorUISref(_el, _renderer) {\n        this._el = _el;\n        this._renderer = _renderer;\n    }\n    AnchorUISref.prototype.openInNewTab = function () {\n        return this._el.nativeElement.target === '_blank';\n    };\n    AnchorUISref.prototype.update = function (href) {\n        if (href && href !== '') {\n            this._renderer.setProperty(this._el.nativeElement, 'href', href);\n        }\n        else {\n            this._renderer.removeAttribute(this._el.nativeElement, 'href');\n        }\n    };\n    AnchorUISref = __decorate([\n        Directive({ selector: 'a[uiSref]' }),\n        __metadata(\"design:paramtypes\", [ElementRef, Renderer2])\n    ], AnchorUISref);\n    return AnchorUISref;\n}());\n/**\n * A directive when clicked, initiates a [[Transition]] to a [[TargetState]].\n *\n * ### Purpose\n *\n * This directive is applied to anchor tags (`<a>`) or any other clickable element.  It is a state reference (or sref --\n * similar to an href).  When clicked, the directive will transition to that state by calling [[StateService.go]],\n * and optionally supply state parameter values and transition options.\n *\n * When this directive is on an anchor tag, it will also add an `href` attribute to the anchor.\n *\n * ### Selector\n *\n * - `[uiSref]`: The directive is created as an attribute on an element, e.g., `<a uiSref></a>`\n *\n * ### Inputs\n *\n * - `uiSref`: the target state's name, e.g., `uiSref=\"foostate\"`.  If a component template uses a relative `uiSref`,\n * e.g., `uiSref=\".child\"`, the reference is relative to that component's state.\n *\n * - `uiParams`: any target state parameter values, as an object, e.g., `[uiParams]=\"{ fooId: bar.fooId }\"`\n *\n * - `uiOptions`: [[TransitionOptions]], e.g., `[uiOptions]=\"{ inherit: false }\"`\n *\n * @example\n * ```html\n *\n * <!-- Targets bar state' -->\n * <a uiSref=\"bar\">Bar</a>\n *\n * <!-- Assume this component's state is \"foo\".\n *      Relatively targets \"foo.child\" -->\n * <a uiSref=\".child\">Foo Child</a>\n *\n * <!-- Targets \"bar\" state and supplies parameter value -->\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\">Bar {{foo.barId}}</a>\n *\n * <!-- Targets \"bar\" state and parameter, doesn't inherit existing parameters-->\n * <a uiSref=\"bar\" [uiParams]=\"{ barId: foo.barId }\" [uiOptions]=\"{ inherit: false }\">Bar {{foo.barId}}</a>\n * ```\n */\nvar UISref = /** @class */ (function () {\n    function UISref(_router, _anchorUISref, parent) {\n        var _this = this;\n        /**\n         * An observable (ReplaySubject) of the state this UISref is targeting.\n         * When the UISref is clicked, it will transition to this [[TargetState]].\n         */\n        this.targetState$ = new ReplaySubject(1);\n        /** @internalapi */ this._emit = false;\n        this._router = _router;\n        this._anchorUISref = _anchorUISref;\n        this._parent = parent;\n        this._statesSub = _router.globals.states$.subscribe(function () { return _this.update(); });\n    }\n    Object.defineProperty(UISref.prototype, \"uiSref\", {\n        /** @internalapi */\n        set: function (val) {\n            this.state = val;\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UISref.prototype, \"uiParams\", {\n        /** @internalapi */\n        set: function (val) {\n            this.params = val;\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UISref.prototype, \"uiOptions\", {\n        /** @internalapi */\n        set: function (val) {\n            this.options = val;\n            this.update();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UISref.prototype.ngOnInit = function () {\n        this._emit = true;\n        this.update();\n    };\n    UISref.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    UISref.prototype.ngOnDestroy = function () {\n        this._emit = false;\n        this._statesSub.unsubscribe();\n        this.targetState$.unsubscribe();\n    };\n    UISref.prototype.update = function () {\n        var $state = this._router.stateService;\n        if (this._emit) {\n            var newTarget = $state.target(this.state, this.params, this.getOptions());\n            this.targetState$.next(newTarget);\n        }\n        if (this._anchorUISref) {\n            var href = $state.href(this.state, this.params, this.getOptions());\n            this._anchorUISref.update(href);\n        }\n    };\n    UISref.prototype.getOptions = function () {\n        var defaultOpts = {\n            relative: this._parent && this._parent.context && this._parent.context.name,\n            inherit: true,\n            source: 'sref',\n        };\n        return extend(defaultOpts, this.options || {});\n    };\n    /** When triggered by a (click) event, this function transitions to the UISref's target state */\n    UISref.prototype.go = function (button, ctrlKey, metaKey) {\n        if ((this._anchorUISref &&\n            (this._anchorUISref.openInNewTab() || button || !isNumber(button) || ctrlKey || metaKey)) ||\n            !this.state) {\n            return;\n        }\n        this._router.stateService.go(this.state, this.params, this.getOptions());\n        return false;\n    };\n    __decorate([\n        Input('uiSref'),\n        __metadata(\"design:type\", String)\n    ], UISref.prototype, \"state\", void 0);\n    __decorate([\n        Input('uiParams'),\n        __metadata(\"design:type\", Object)\n    ], UISref.prototype, \"params\", void 0);\n    __decorate([\n        Input('uiOptions'),\n        __metadata(\"design:type\", Object)\n    ], UISref.prototype, \"options\", void 0);\n    __decorate([\n        HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], UISref.prototype, \"go\", null);\n    UISref = __decorate([\n        Directive({\n            selector: '[uiSref]',\n            exportAs: 'uiSref',\n        }),\n        __param(1, Optional()),\n        __param(2, Inject(UIView.PARENT_INJECT)),\n        __metadata(\"design:paramtypes\", [UIRouter,\n            AnchorUISref, Object])\n    ], UISref);\n    return UISref;\n}());\n\n/** @internalapi */\nvar inactiveStatus = {\n    active: false,\n    exact: false,\n    entering: false,\n    exiting: false,\n    targetStates: [],\n};\n/**\n * Returns a Predicate<PathNode[]>\n *\n * The predicate returns true when the target state (and param values)\n * match the (tail of) the path, and the path's param values\n *\n * @internalapi\n */\nvar pathMatches = function (target) {\n    if (!target.exists())\n        return function () { return false; };\n    var state = target.$state();\n    var targetParamVals = target.params();\n    var targetPath = PathUtils.buildPath(target);\n    var paramSchema = targetPath\n        .map(function (node) { return node.paramSchema; })\n        .reduce(unnestR, [])\n        .filter(function (param) { return targetParamVals.hasOwnProperty(param.id); });\n    return function (path) {\n        var tailNode = tail(path);\n        if (!tailNode || tailNode.state !== state)\n            return false;\n        var paramValues = PathUtils.paramValues(path);\n        return Param.equals(paramSchema, paramValues, targetParamVals);\n    };\n};\nvar ɵ0$1 = pathMatches;\n/**\n * Given basePath: [a, b], appendPath: [c, d]),\n * Expands the path to [c], [c, d]\n * Then appends each to [a,b,] and returns: [a, b, c], [a, b, c, d]\n *\n * @internalapi\n */\nfunction spreadToSubPaths(basePath, appendPath) {\n    return appendPath.map(function (node) { return basePath.concat(PathUtils.subPath(appendPath, function (n) { return n.state === node.state; })); });\n}\n/**\n * Given a TransEvt (Transition event: started, success, error)\n * and a UISref Target State, return a SrefStatus object\n * which represents the current status of that Sref:\n * active, activeEq (exact match), entering, exiting\n *\n * @internalapi\n */\nfunction getSrefStatus(event, srefTarget) {\n    var pathMatchesTarget = pathMatches(srefTarget);\n    var tc = event.trans.treeChanges();\n    var isStartEvent = event.evt === 'start';\n    var isSuccessEvent = event.evt === 'success';\n    var activePath = isSuccessEvent ? tc.to : tc.from;\n    var isActive = function () {\n        return spreadToSubPaths([], activePath)\n            .map(pathMatchesTarget)\n            .reduce(anyTrueR, false);\n    };\n    var isExact = function () { return pathMatchesTarget(activePath); };\n    var isEntering = function () {\n        return spreadToSubPaths(tc.retained, tc.entering)\n            .map(pathMatchesTarget)\n            .reduce(anyTrueR, false);\n    };\n    var isExiting = function () {\n        return spreadToSubPaths(tc.retained, tc.exiting)\n            .map(pathMatchesTarget)\n            .reduce(anyTrueR, false);\n    };\n    return {\n        active: isActive(),\n        exact: isExact(),\n        entering: isStartEvent ? isEntering() : false,\n        exiting: isStartEvent ? isExiting() : false,\n        targetStates: [srefTarget],\n    };\n}\n/** @internalapi */\nfunction mergeSrefStatus(left, right) {\n    return {\n        active: left.active || right.active,\n        exact: left.exact || right.exact,\n        entering: left.entering || right.entering,\n        exiting: left.exiting || right.exiting,\n        targetStates: left.targetStates.concat(right.targetStates),\n    };\n}\n/**\n * A directive which emits events when a paired [[UISref]] status changes.\n *\n * This directive is primarily used by the [[UISrefActive]] directives to monitor `UISref`(s).\n *\n * This directive shares two attribute selectors with `UISrefActive`:\n *\n * - `[uiSrefActive]`\n * - `[uiSrefActiveEq]`.\n *\n * Thus, whenever a `UISrefActive` directive is created, a `UISrefStatus` directive is also created.\n *\n * Most apps should simply use `UISrefActive`, but some advanced components may want to process the\n * [[SrefStatus]] events directly.\n *\n * ```js\n * <li (uiSrefStatus)=\"onSrefStatusChanged($event)\">\n *   <a uiSref=\"book\" [uiParams]=\"{ bookId: book.id }\">Book {{ book.name }}</a>\n * </li>\n * ```\n *\n * The `uiSrefStatus` event is emitted whenever an enclosed `uiSref`'s status changes.\n * The event emitted is of type [[SrefStatus]], and has boolean values for `active`, `exact`, `entering`, and `exiting`; also has a [[StateOrName]] `identifier`value.\n *\n * The values from this event can be captured and stored on a component (then applied, e.g., using ngClass).\n *\n * ---\n *\n * A single `uiSrefStatus` can enclose multiple `uiSref`.\n * Each status boolean (`active`, `exact`, `entering`, `exiting`) will be true if *any of the enclosed `uiSref` status is true*.\n * In other words, all enclosed `uiSref` statuses  are merged to a single status using `||` (logical or).\n *\n * ```js\n * <li (uiSrefStatus)=\"onSrefStatus($event)\" uiSref=\"admin\">\n *   Home\n *   <ul>\n *     <li> <a uiSref=\"admin.users\">Users</a> </li>\n *     <li> <a uiSref=\"admin.groups\">Groups</a> </li>\n *   </ul>\n * </li>\n * ```\n *\n * In the above example, `$event.active === true` when either `admin.users` or `admin.groups` is active.\n *\n * ---\n *\n * This API is subject to change.\n */\nvar UISrefStatus = /** @class */ (function () {\n    function UISrefStatus(_hostUiSref, _globals) {\n        /** current statuses of the state/params the uiSref directive is linking to */\n        this.uiSrefStatus = new EventEmitter(false);\n        this._globals = _globals;\n        this._hostUiSref = _hostUiSref;\n        this.status = Object.assign({}, inactiveStatus);\n    }\n    UISrefStatus.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // Map each transition start event to a stream of:\n        // start -> (success|error)\n        var transEvents$ = this._globals.start$.pipe(switchMap(function (trans) {\n            var event = function (evt) { return ({ evt: evt, trans: trans }); };\n            var transStart$ = of(event('start'));\n            var transResult = trans.promise.then(function () { return event('success'); }, function () { return event('error'); });\n            var transFinish$ = from(transResult);\n            return concat(transStart$, transFinish$);\n        }));\n        var withHostSref = function (childrenSrefs) {\n            return childrenSrefs\n                .concat(_this._hostUiSref)\n                .filter(identity)\n                .reduce(uniqR, []);\n        };\n        // Watch the @ContentChildren UISref[] components and get their target states\n        this._srefs$ = new BehaviorSubject(withHostSref(this._srefs.toArray()));\n        this._srefChangesSub = this._srefs.changes.subscribe(function (srefs) { return _this._srefs$.next(withHostSref(srefs)); });\n        var targetStates$ = this._srefs$.pipe(switchMap(function (srefs) { return combineLatest(srefs.map(function (sref) { return sref.targetState$; })); }));\n        // Calculate the status of each UISref based on the transition event.\n        // Reduce the statuses (if multiple) by or-ing each flag.\n        this._subscription = transEvents$\n            .pipe(switchMap(function (evt) {\n            return targetStates$.pipe(map(function (targets) {\n                var statuses = targets.map(function (target) { return getSrefStatus(evt, target); });\n                return statuses.reduce(mergeSrefStatus);\n            }));\n        }))\n            .subscribe(this._setStatus.bind(this));\n    };\n    UISrefStatus.prototype.ngOnDestroy = function () {\n        if (this._subscription)\n            this._subscription.unsubscribe();\n        if (this._srefChangesSub)\n            this._srefChangesSub.unsubscribe();\n        if (this._srefs$)\n            this._srefs$.unsubscribe();\n        this._subscription = this._srefChangesSub = this._srefs$ = undefined;\n    };\n    UISrefStatus.prototype._setStatus = function (status) {\n        this.status = status;\n        this.uiSrefStatus.emit(status);\n    };\n    __decorate([\n        Output('uiSrefStatus'),\n        __metadata(\"design:type\", Object)\n    ], UISrefStatus.prototype, \"uiSrefStatus\", void 0);\n    __decorate([\n        ContentChildren(UISref, { descendants: true }),\n        __metadata(\"design:type\", QueryList)\n    ], UISrefStatus.prototype, \"_srefs\", void 0);\n    UISrefStatus = __decorate([\n        Directive({\n            selector: '[uiSrefStatus],[uiSrefActive],[uiSrefActiveEq]',\n            exportAs: 'uiSrefStatus',\n        }),\n        __param(0, Host()), __param(0, Self()), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [UISref, UIRouterGlobals])\n    ], UISrefStatus);\n    return UISrefStatus;\n}());\n\n/**\n * A directive that adds a CSS class when its associated `uiSref` link is active.\n *\n * ### Purpose\n *\n * This directive should be paired with one (or more) [[UISref]] directives.\n * It will apply a CSS class to its element when the state the `uiSref` targets is activated.\n *\n * This can be used to create navigation UI where the active link is highlighted.\n *\n * ### Selectors\n *\n * - `[uiSrefActive]`: When this selector is used, the class is added when the target state or any\n * child of the target state is active\n * - `[uiSrefActiveEq]`: When this selector is used, the class is added when the target state is\n * exactly active (the class is not added if a child of the target state is active).\n *\n * ### Inputs\n *\n * - `uiSrefActive`/`uiSrefActiveEq`: one or more CSS classes to add to the element, when the `uiSref` is active\n *\n * #### Example:\n * The anchor tag has the `active` class added when the `foo` state is active.\n * ```html\n * <a uiSref=\"foo\" uiSrefActive=\"active\">Foo</a>\n * ```\n *\n * ### Matching parameters\n *\n * If the `uiSref` includes parameters, the current state must be active, *and* the parameter values must match.\n *\n * #### Example:\n * The first anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\n * equals 25.\n * The second anchor tag has the `active` class added when the `foo.bar` state is active and the `id` parameter\n * equals 32.\n * ```html\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 25 }\" uiSrefActive=\"active\">Bar #25</a>\n * <a uiSref=\"foo.bar\" [uiParams]=\"{ id: 32 }\" uiSrefActive=\"active\">Bar #32</a>\n * ```\n *\n * #### Example:\n * A list of anchor tags are created for a list of `bar` objects.\n * An anchor tag will have the `active` class when `foo.bar` state is active and the `id` parameter matches\n * that object's `id`.\n * ```html\n * <li *ngFor=\"let bar of bars\">\n *   <a uiSref=\"foo.bar\" [uiParams]=\"{ id: bar.id }\" uiSrefActive=\"active\">Bar #{{ bar.id }}</a>\n * </li>\n * ```\n *\n * ### Multiple uiSrefs\n *\n * A single `uiSrefActive` can be used for multiple `uiSref` links.\n * This can be used to create (for example) a drop down navigation menu, where the menui is highlighted\n * if *any* of its inner links are active.\n *\n * The `uiSrefActive` should be placed on an ancestor element of the `uiSref` list.\n * If anyof the `uiSref` links are activated, the class will be added to the ancestor element.\n *\n * #### Example:\n * This is a dropdown nagivation menu for \"Admin\" states.\n * When any of `admin.users`, `admin.groups`, `admin.settings` are active, the `<li>` for the dropdown\n * has the `dropdown-child-active` class applied.\n * Additionally, the active anchor tag has the `active` class applied.\n * ```html\n * <ul class=\"dropdown-menu\">\n *   <li uiSrefActive=\"dropdown-child-active\" class=\"dropdown admin\">\n *     Admin\n *     <ul>\n *       <li><a uiSref=\"admin.users\" uiSrefActive=\"active\">Users</a></li>\n *       <li><a uiSref=\"admin.groups\" uiSrefActive=\"active\">Groups</a></li>\n *       <li><a uiSref=\"admin.settings\" uiSrefActive=\"active\">Settings</a></li>\n *     </ul>\n *   </li>\n * </ul>\n * ```\n */\nvar UISrefActive = /** @class */ (function () {\n    function UISrefActive(uiSrefStatus, rnd, host) {\n        var _this = this;\n        this._classes = [];\n        this._classesEq = [];\n        this._subscription = uiSrefStatus.uiSrefStatus.subscribe(function (next) {\n            _this._classes.forEach(function (cls) {\n                if (next.active) {\n                    rnd.addClass(host.nativeElement, cls);\n                }\n                else {\n                    rnd.removeClass(host.nativeElement, cls);\n                }\n            });\n            _this._classesEq.forEach(function (cls) {\n                if (next.exact) {\n                    rnd.addClass(host.nativeElement, cls);\n                }\n                else {\n                    rnd.removeClass(host.nativeElement, cls);\n                }\n            });\n        });\n    }\n    Object.defineProperty(UISrefActive.prototype, \"active\", {\n        set: function (val) {\n            this._classes = val.split(/\\s+/);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UISrefActive.prototype, \"activeEq\", {\n        set: function (val) {\n            this._classesEq = val.split(/\\s+/);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UISrefActive.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    __decorate([\n        Input('uiSrefActive'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], UISrefActive.prototype, \"active\", null);\n    __decorate([\n        Input('uiSrefActiveEq'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], UISrefActive.prototype, \"activeEq\", null);\n    UISrefActive = __decorate([\n        Directive({\n            selector: '[uiSrefActive],[uiSrefActiveEq]',\n        }),\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [UISrefStatus, Renderer2, ElementRef])\n    ], UISrefActive);\n    return UISrefActive;\n}());\n\n/**\n * The UI-Router for Angular directives:\n *\n * - [[UIView]]: A viewport for routed components\n * - [[UISref]]: A state ref to a target state; navigates when clicked\n * - [[UISrefActive]]: (and `UISrefActiveEq`) Adds a css class when a UISref's target state (or a child state) is active\n *\n * @ng2api\n * @preferred\n * @module directives\n */ /** */\n/** @internalapi */\nvar _UIROUTER_DIRECTIVES = [UISref, AnchorUISref, UIView, UISrefActive, UISrefStatus];\n/**\n * References to the UI-Router directive classes, for use within a @Component's `directives:` property\n * @deprecated use [[UIRouterModule]]\n * @internalapi\n */\nvar UIROUTER_DIRECTIVES = _UIROUTER_DIRECTIVES;\n\n/** @hidden */ var UIROUTER_ROOT_MODULE = new InjectionToken('UIRouter Root Module');\n/** @hidden */ var UIROUTER_MODULE_TOKEN = new InjectionToken('UIRouter Module');\n/** @hidden */ var UIROUTER_STATES = new InjectionToken('UIRouter States');\n// Delay angular bootstrap until first transition is successful, for SSR.\n// See https://github.com/ui-router/angular/pull/127\nfunction onTransitionReady(transitionService, root) {\n    var mod = root[0];\n    if (!mod || !mod.deferInitialRender) {\n        return function () { return Promise.resolve(); };\n    }\n    return function () {\n        return new Promise(function (resolve) {\n            var hook = function (trans) {\n                trans.promise.then(resolve, resolve);\n            };\n            transitionService.onStart({}, hook, { invokeLimit: 1 });\n        });\n    };\n}\nfunction makeRootProviders(module) {\n    return [\n        { provide: UIROUTER_ROOT_MODULE, useValue: module, multi: true },\n        { provide: UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: onTransitionReady,\n            deps: [TransitionService, UIROUTER_ROOT_MODULE],\n            multi: true,\n        },\n    ];\n}\nfunction makeChildProviders(module) {\n    return [\n        { provide: UIROUTER_MODULE_TOKEN, useValue: module, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: module.states || [], multi: true },\n    ];\n}\nfunction locationStrategy(useHash) {\n    return { provide: LocationStrategy, useClass: useHash ? HashLocationStrategy : PathLocationStrategy };\n}\n/**\n * Creates UI-Router Modules\n *\n * This class has two static factory methods which create UIRouter Modules.\n * A UI-Router Module is an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n * with support for UI-Router.\n *\n * ### UIRouter Directives\n *\n * When a UI-Router Module is imported into a `NgModule`, that module's components\n * can use the UIRouter Directives such as [[UIView]], [[UISref]], [[UISrefActive]].\n *\n * ### State Definitions\n *\n * State definitions found in the `states:` property are provided to the Dependency Injector.\n * This enables UI-Router to automatically register the states with the [[StateRegistry]] at bootstrap (and during lazy load).\n *\n * ### Entry Components\n *\n * Any routed components are added as `entryComponents:` so they will get compiled.\n */\nvar UIRouterModule = /** @class */ (function () {\n    function UIRouterModule() {\n    }\n    UIRouterModule_1 = UIRouterModule;\n    /**\n     * Creates a UI-Router Module for the root (bootstrapped) application module to import\n     *\n     * This factory function creates an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n     * with UI-Router support.\n     *\n     * The `forRoot` module should be added to the `imports:` of the `NgModule` being bootstrapped.\n     * An application should only create and import a single `NgModule` using `forRoot()`.\n     * All other modules should be created using [[UIRouterModule.forChild]].\n     *\n     * Unlike `forChild`, an `NgModule` returned by this factory provides the [[UIRouter]] singleton object.\n     * This factory also accepts root-level router configuration.\n     * These are the only differences between `forRoot` and `forChild`.\n     *\n     * Example:\n     * ```js\n     * let routerConfig = {\n     *   otherwise: '/home',\n     *   states: [homeState, aboutState]\n     * };\n     *\n     * @ NgModule({\n     *   imports: [\n     *     BrowserModule,\n     *     UIRouterModule.forRoot(routerConfig),\n     *     FeatureModule1\n     *   ]\n     * })\n     * class MyRootAppModule {}\n     *\n     * browserPlatformDynamic.bootstrapModule(MyRootAppModule);\n     * ```\n     *\n     * @param config declarative UI-Router configuration\n     * @returns an `NgModule` which provides the [[UIRouter]] singleton instance\n     */\n    UIRouterModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: UIRouterModule_1,\n            providers: __spread([\n                _UIROUTER_INSTANCE_PROVIDERS,\n                _UIROUTER_SERVICE_PROVIDERS,\n                locationStrategy(config.useHash)\n            ], makeRootProviders(config)),\n        };\n    };\n    /**\n     * Creates an `NgModule` for a UIRouter module\n     *\n     * This function creates an [Angular NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html)\n     * with UI-Router support.\n     *\n     * #### Example:\n     * ```js\n     * var homeState = { name: 'home', url: '/home', component: Home };\n     * var aboutState = { name: 'about', url: '/about', component: About };\n     *\n     * @ NgModule({\n     *   imports: [\n     *     UIRouterModule.forChild({ states: [ homeState, aboutState ] }),\n     *     SharedModule,\n     *   ],\n     *   declarations: [ Home, About ],\n     * })\n     * export class AppModule {};\n     * ```\n     *\n     * @param module UI-Router module options\n     * @returns an `NgModule`\n     */\n    UIRouterModule.forChild = function (module) {\n        if (module === void 0) { module = {}; }\n        return {\n            ngModule: UIRouterModule_1,\n            providers: makeChildProviders(module),\n        };\n    };\n    var UIRouterModule_1;\n    UIRouterModule = UIRouterModule_1 = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            declarations: [_UIROUTER_DIRECTIVES],\n            exports: [_UIROUTER_DIRECTIVES],\n            entryComponents: [UIView],\n        })\n    ], UIRouterModule);\n    return UIRouterModule;\n}());\n\n/** @ng2api @module core */\n/**\n * Returns a function which lazy loads a nested module\n *\n * This is primarily used by the [[ng2LazyLoadBuilder]] when processing [[Ng2StateDeclaration.loadChildren]].\n *\n * It could also be used manually as a [[StateDeclaration.lazyLoad]] property to lazy load an `NgModule` and its state(s).\n *\n * #### Example:\n * Using `import()` and named export of `HomeModule`\n * ```js\n * declare var System;\n * var futureState = {\n *   name: 'home.**',\n *   url: '/home',\n *   lazyLoad: loadNgModule(() => import('./home/home.module').then(result => result.HomeModule))\n * }\n * ```\n *\n * #### Example:\n * Using a path (string) to the module\n * ```js\n * var futureState = {\n *   name: 'home.**',\n *   url: '/home',\n *   lazyLoad: loadNgModule('./home/home.module#HomeModule')\n * }\n * ```\n *\n *\n * @param moduleToLoad a path (string) to the NgModule to load.\n *    Or a function which loads the NgModule code which should\n *    return a reference to  the `NgModule` class being loaded (or a `Promise` for it).\n *\n * @returns A function which takes a transition, which:\n * - Gets the Injector (scoped properly for the destination state)\n * - Loads and creates the NgModule\n * - Finds the \"replacement state\" for the target state, and adds the new NgModule Injector to it (as a resolve)\n * - Returns the new states array\n */\nfunction loadNgModule(moduleToLoad) {\n    return function (transition, stateObject) {\n        var ng2Injector = transition.injector().get(NATIVE_INJECTOR_TOKEN);\n        var createModule = function (factory) { return factory.create(ng2Injector); };\n        var applyModule = function (moduleRef) { return applyNgModule(transition, moduleRef, ng2Injector, stateObject); };\n        return loadModuleFactory(moduleToLoad, ng2Injector)\n            .then(createModule)\n            .then(applyModule);\n    };\n}\n/**\n * Returns the module factory that can be used to instantiate a module\n *\n * For strings this:\n * - Finds the correct NgModuleFactoryLoader\n * - Loads the new NgModuleFactory from the path string (async)\n *\n * For a Type<any> or Promise<Type<any>> this:\n * - Compiles the component type (if not running with AOT)\n * - Returns the NgModuleFactory resulting from compilation (or direct loading if using AOT) as a Promise\n *\n * @internalapi\n */\nfunction loadModuleFactory(moduleToLoad, ng2Injector) {\n    if (isString(moduleToLoad)) {\n        return ng2Injector.get(NgModuleFactoryLoader).load(moduleToLoad);\n    }\n    var compiler = ng2Injector.get(Compiler);\n    var unwrapEsModuleDefault = function (x) { return (x && x.__esModule && x['default'] ? x['default'] : x); };\n    return Promise.resolve(moduleToLoad())\n        .then(unwrapEsModuleDefault)\n        .then(function (t) {\n        if (t instanceof NgModuleFactory) {\n            return t;\n        }\n        return compiler.compileModuleAsync(t);\n    });\n}\n/**\n * Apply the UI-Router Modules found in the lazy loaded module.\n *\n * Apply the Lazy Loaded NgModule's newly created Injector to the right state in the state tree.\n *\n * Lazy loading uses a placeholder state which is removed (and replaced) after the module is loaded.\n * The NgModule should include a state with the same name as the placeholder.\n *\n * Find the *newly loaded state* with the same name as the *placeholder state*.\n * The NgModule's Injector (and ComponentFactoryResolver) will be added to that state.\n * The Injector/Factory are used when creating Components for the `replacement` state and all its children.\n *\n * @internalapi\n */\nfunction applyNgModule(transition, ng2Module, parentInjector, lazyLoadState) {\n    var injector = ng2Module.injector;\n    var uiRouter = injector.get(UIRouter);\n    var registry = uiRouter.stateRegistry;\n    var originalName = lazyLoadState.name;\n    var originalState = registry.get(originalName);\n    // Check if it's a future state (ends with .**)\n    var isFuture = /^(.*)\\.\\*\\*$/.exec(originalName);\n    // Final name (without the .**)\n    var replacementName = isFuture && isFuture[1];\n    var newRootModules = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_ROOT_MODULE).reduce(uniqR, []);\n    var newChildModules = multiProviderParentChildDelta(parentInjector, injector, UIROUTER_MODULE_TOKEN).reduce(uniqR, []);\n    if (newRootModules.length) {\n        console.log(newRootModules); // tslint:disable-line:no-console\n        throw new Error('Lazy loaded modules should not contain a UIRouterModule.forRoot() module');\n    }\n    var newStateObjects = newChildModules\n        .map(function (module) { return applyModuleConfig(uiRouter, injector, module); })\n        .reduce(unnestR, [])\n        .reduce(uniqR, []);\n    if (isFuture) {\n        var replacementState = registry.get(replacementName);\n        if (!replacementState || replacementState === originalState) {\n            throw new Error(\"The Future State named '\" + originalName + \"' lazy loaded an NgModule. \" +\n                (\"The lazy loaded NgModule must have a state named '\" + replacementName + \"' \") +\n                (\"which replaces the (placeholder) '\" + originalName + \"' Future State. \") +\n                (\"Add a '\" + replacementName + \"' state to the lazy loaded NgModule \") +\n                \"using UIRouterModule.forChild({ states: CHILD_STATES }).\");\n        }\n    }\n    // Supply the newly loaded states with the Injector from the lazy loaded NgModule.\n    // If a tree of states is lazy loaded, only add the injector to the root of the lazy loaded tree.\n    // The children will get the injector by resolve inheritance.\n    var newParentStates = newStateObjects.filter(function (state) { return !inArray(newStateObjects, state.parent); });\n    // Add the Injector to the top of the lazy loaded state tree as a resolve\n    newParentStates.forEach(function (state) { return state.resolvables.push(Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector)); });\n    return {};\n}\n/**\n * Returns the new dependency injection values from the Child Injector\n *\n * When a DI token is defined as multi: true, the child injector\n * can add new values for the token.\n *\n * This function returns the values added by the child injector,  and excludes all values from the parent injector.\n *\n * @internalapi\n */\nfunction multiProviderParentChildDelta(parent, child, token) {\n    var childVals = child.get(token, []);\n    var parentVals = parent.get(token, []);\n    return childVals.filter(function (val) { return parentVals.indexOf(val) === -1; });\n}\n\n/**\n * This is a [[StateBuilder.builder]] function for ngModule lazy loading in Angular.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * decorates the `lazyLoad` property for states that have a [[Ng2StateDeclaration.ngModule]] declaration.\n *\n * If the state has a [[Ng2StateDeclaration.ngModule]], it will create a `lazyLoad` function\n * that in turn calls `loadNgModule(loadNgModuleFn)`.\n *\n * #### Example:\n * A state that has a `ngModule`\n * ```js\n * var decl = {\n *   ngModule: () => import('./childModule.ts')\n * }\n * ```\n * would build a state with a `lazyLoad` function like:\n * ```js\n * import { loadNgModule } from \"@uirouter/angular\";\n * var decl = {\n *   lazyLoad: loadNgModule(() => import('./childModule.ts')\n * }\n * ```\n *\n * If the state has both a `ngModule:` *and* a `lazyLoad`, then the `lazyLoad` is run first.\n *\n * #### Example:\n * ```js\n * var decl = {\n *   lazyLoad: () => import('third-party-library'),\n *   ngModule: () => import('./childModule.ts')\n * }\n * ```\n * would build a state with a `lazyLoad` function like:\n * ```js\n * import { loadNgModule } from \"@uirouter/angular\";\n * var decl = {\n *   lazyLoad: () => import('third-party-library')\n *       .then(() => loadNgModule(() => import('./childModule.ts'))\n * }\n * ```\n *\n */\nfunction ng2LazyLoadBuilder(state, parent) {\n    var loadNgModuleFn = state['loadChildren'];\n    return loadNgModuleFn ? loadNgModule(loadNgModuleFn) : state.lazyLoad;\n}\n\n/** A `LocationServices` that delegates to the Angular LocationStrategy */\nvar Ng2LocationServices = /** @class */ (function (_super) {\n    __extends(Ng2LocationServices, _super);\n    function Ng2LocationServices(router, _locationStrategy, isBrowser) {\n        var _this = _super.call(this, router, isBrowser) || this;\n        _this._locationStrategy = _locationStrategy;\n        _this._locationStrategy.onPopState(function (evt) {\n            if (evt.type !== 'hashchange') {\n                _this._listener(evt);\n            }\n        });\n        return _this;\n    }\n    Ng2LocationServices.prototype._get = function () {\n        return this._locationStrategy.path(true).replace(this._locationStrategy.getBaseHref().replace(/\\/$/, ''), '');\n    };\n    Ng2LocationServices.prototype._set = function (state, title, url, replace) {\n        var _a = parseUrl(url), path = _a.path, search = _a.search, hash = _a.hash;\n        var urlWithHash = path + (hash ? '#' + hash : '');\n        if (replace) {\n            this._locationStrategy.replaceState(state, title, urlWithHash, search);\n        }\n        else {\n            this._locationStrategy.pushState(state, title, urlWithHash, search);\n        }\n    };\n    Ng2LocationServices.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n    };\n    return Ng2LocationServices;\n}(BaseLocationServices));\n\n/** @module ng2 */\nvar Ng2LocationConfig = /** @class */ (function (_super) {\n    __extends(Ng2LocationConfig, _super);\n    function Ng2LocationConfig(router, _locationStrategy) {\n        var _this = _super.call(this, router, is(PathLocationStrategy)(_locationStrategy)) || this;\n        _this._locationStrategy = _locationStrategy;\n        return _this;\n    }\n    Ng2LocationConfig.prototype.baseHref = function (href) {\n        return this._locationStrategy.getBaseHref();\n    };\n    return Ng2LocationConfig;\n}(BrowserLocationConfig));\n\n/**\n * # UI-Router for Angular (v2+)\n *\n * - [@uirouter/angular home page](https://ui-router.github.io/ng2)\n * - [tutorials](https://ui-router.github.io/tutorial/ng2/helloworld)\n * - [quick start repository](http://github.com/ui-router/quickstart-ng2)\n *\n * Getting started:\n *\n * - Use npm. Add a dependency on latest `@uirouter/angular`\n * - Import UI-Router classes directly from `\"@uirouter/angular\"`\n *\n * ```js\n * import {StateRegistry} from \"@uirouter/angular\";\n * ```\n *\n * - Create application states (as defined by [[Ng2StateDeclaration]]).\n *\n * ```js\n * export let state1: Ng2StateDeclaration = {\n *   name: 'state1',\n *   component: State1Component,\n *   url: '/one'\n * }\n *\n * export let state2: Ng2StateDeclaration = {\n *   name: 'state2',\n *   component: State2Component,\n *   url: '/two'\n * }\n * ```\n *\n * - Import a [[UIRouterModule.forChild]] module into your feature `NgModule`s.\n *\n * ```js\n * @ NgModule({\n *   imports: [\n *     SharedModule,\n *     UIRouterModule.forChild({ states: [state1, state2 ] })\n *   ],\n *   declarations: [\n *     State1Component,\n *     State2Component,\n *   ]\n * })\n * export class MyFeatureModule {}\n * ```\n *\n * - Import a [[UIRouterModule.forRoot]] module into your application root `NgModule`\n * - Either bootstrap a [[UIView]] component, or add a `<ui-view></ui-view>` viewport to your root component.\n *\n * ```js\n * @ NgModule({\n *   imports: [\n *     BrowserModule,\n *     UIRouterModule.forRoot({ states: [ homeState ] }),\n *     MyFeatureModule,\n *   ],\n *   declarations: [\n *     HomeComponent\n *   ]\n *   bootstrap: [ UIView ]\n * })\n * class RootAppModule {}\n *\n * browserPlatformDynamic.bootstrapModule(RootAppModule);\n * ```\n *\n * - Optionally specify a configuration class [[ChildModule.configClass]] for any module\n * to perform any router configuration during bootstrap or lazyload.\n * Pass the class to [[UIRouterModule.forRoot]] or [[UIRouterModule.forChild]].\n *\n * ```js\n * import {UIRouter} from \"@uirouter/angular\";\n *\n * @ Injectable()\n * export class MyUIRouterConfig {\n *   // Constructor is injectable\n *   constructor(uiRouter: UIRouter) {\n *     uiRouter.urlMatcherFactory.type('datetime', myDateTimeParamType);\n *   }\n * }\n * ```\n *\n * @preferred @module ng2\n */\n/**\n * This is a factory function for a UIRouter instance\n *\n * Creates a UIRouter instance and configures it for Angular, then invokes router bootstrap.\n * This function is used as an Angular `useFactory` Provider.\n */\nfunction uiRouterFactory(locationStrategy, rootModules, modules, injector) {\n    if (rootModules.length !== 1) {\n        throw new Error(\"Exactly one UIRouterModule.forRoot() should be in the bootstrapped app module's imports: []\");\n    }\n    // ----------------- Create router -----------------\n    // Create a new ng2 UIRouter and configure it for ng2\n    var router = new UIRouter();\n    // Add RxJS plugin\n    router.plugin(UIRouterRx);\n    // Add $q-like and $injector-like service APIs\n    router.plugin(servicesPlugin);\n    // ----------------- Monkey Patches ----------------\n    // Monkey patch the services.$injector to use the root ng2 Injector\n    services.$injector.get = injector.get.bind(injector);\n    // ----------------- Configure for ng2 -------------\n    router.locationService = new Ng2LocationServices(router, locationStrategy, isPlatformBrowser(injector.get(PLATFORM_ID)));\n    router.locationConfig = new Ng2LocationConfig(router, locationStrategy);\n    // Apply ng2 ui-view handling code\n    var viewConfigFactory = function (path, config) { return new Ng2ViewConfig(path, config); };\n    router.viewService._pluginapi._viewConfigFactory('ng2', viewConfigFactory);\n    // Apply statebuilder decorator for ng2 NgModule registration\n    var registry = router.stateRegistry;\n    registry.decorator('views', ng2ViewsBuilder);\n    registry.decorator('lazyLoad', ng2LazyLoadBuilder);\n    // Prep the tree of NgModule by placing the root NgModule's Injector on the root state.\n    var ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, injector);\n    registry.root().resolvables.push(ng2InjectorResolvable);\n    // Auto-flush the parameter type queue\n    router.urlMatcherFactory.$get();\n    // ----------------- Initialize router -------------\n    rootModules.forEach(function (moduleConfig) { return applyRootModuleConfig(router, injector, moduleConfig); });\n    modules.forEach(function (moduleConfig) { return applyModuleConfig(router, injector, moduleConfig); });\n    return router;\n}\n// Start monitoring the URL when the app starts\nfunction appInitializer(router) {\n    return function () {\n        if (!router.urlRouter.interceptDeferred) {\n            router.urlService.listen();\n            router.urlService.sync();\n        }\n    };\n}\nfunction parentUIViewInjectFactory(r) {\n    return { fqn: null, context: r.root() };\n}\nvar _UIROUTER_INSTANCE_PROVIDERS = [\n    {\n        provide: UIRouter,\n        useFactory: uiRouterFactory,\n        deps: [LocationStrategy, UIROUTER_ROOT_MODULE, UIROUTER_MODULE_TOKEN, Injector],\n    },\n    { provide: UIView.PARENT_INJECT, useFactory: parentUIViewInjectFactory, deps: [StateRegistry] },\n    { provide: APP_INITIALIZER, useFactory: appInitializer, deps: [UIRouter], multi: true },\n];\nfunction fnStateService(r) {\n    return r.stateService;\n}\nfunction fnTransitionService(r) {\n    return r.transitionService;\n}\nfunction fnUrlMatcherFactory(r) {\n    return r.urlMatcherFactory;\n}\nfunction fnUrlRouter(r) {\n    return r.urlRouter;\n}\nfunction fnUrlService(r) {\n    return r.urlService;\n}\nfunction fnViewService(r) {\n    return r.viewService;\n}\nfunction fnStateRegistry(r) {\n    return r.stateRegistry;\n}\nfunction fnGlobals(r) {\n    return r.globals;\n}\nvar _UIROUTER_SERVICE_PROVIDERS = [\n    { provide: StateService, useFactory: fnStateService, deps: [UIRouter] },\n    { provide: TransitionService, useFactory: fnTransitionService, deps: [UIRouter] },\n    { provide: UrlMatcherFactory, useFactory: fnUrlMatcherFactory, deps: [UIRouter] },\n    { provide: UrlRouter, useFactory: fnUrlRouter, deps: [UIRouter] },\n    { provide: UrlService, useFactory: fnUrlService, deps: [UIRouter] },\n    { provide: ViewService, useFactory: fnViewService, deps: [UIRouter] },\n    { provide: StateRegistry, useFactory: fnStateRegistry, deps: [UIRouter] },\n    { provide: UIRouterGlobals, useFactory: fnGlobals, deps: [UIRouter] },\n];\n/**\n * The UI-Router providers, for use in your application bootstrap\n *\n * @deprecated use [[UIRouterModule.forRoot]]\n */\nvar UIROUTER_PROVIDERS = _UIROUTER_INSTANCE_PROVIDERS.concat(_UIROUTER_SERVICE_PROVIDERS);\n\n/** @ng2api @module ng2 */ /** for typedoc */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnchorUISref, Ng2ViewConfig, UIROUTER_DIRECTIVES, UIROUTER_MODULE_TOKEN, UIROUTER_PROVIDERS, UIROUTER_ROOT_MODULE, UIROUTER_STATES, UIRouterModule, UISref, UISrefActive, UISrefStatus, UIView, _UIROUTER_DIRECTIVES, _UIROUTER_INSTANCE_PROVIDERS, _UIROUTER_SERVICE_PROVIDERS, appInitializer, applyModuleConfig, applyNgModule, applyRootModuleConfig, fnGlobals, fnStateRegistry, fnStateService, fnTransitionService, fnUrlMatcherFactory, fnUrlRouter, fnUrlService, fnViewService, loadModuleFactory, loadNgModule, locationStrategy, makeChildProviders, makeRootProviders, multiProviderParentChildDelta, ng2LazyLoadBuilder, ng2ViewsBuilder, onTransitionReady, parentUIViewInjectFactory, uiRouterFactory, ɵ0 };\n//# sourceMappingURL=uirouter-angular.js.map\n","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @packageDocumentation @module common_hof\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn) {\n    return function curried() {\n        if (arguments.length >= fn.length) {\n            return fn.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        return curried.bind.apply(curried, __spreadArrays([this], args));\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport var prop = function (name) { return function (obj) { return obj && obj[name]; }; };\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport var propEq = curry(function (name, _val, obj) { return obj && obj[name] === _val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport var parse = function (name) { return pipe.apply(null, name.split('.').map(prop)); };\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport var not = function (fn) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return !fn.apply(null, args);\n}; };\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport var all = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); }; };\n// tslint:disable-next-line:variable-name\nexport var any = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); }; };\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport var is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor) || obj instanceof ctor;\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport var eq = function (value) { return function (other) { return value === other; }; };\n/** Given a value, returns a function which returns the value */\nexport var val = function (v) { return function () { return v; }; };\nexport function invoke(fnName, args) {\n    return function (obj) { return obj[fnName].apply(obj, args); };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n//# sourceMappingURL=hof.js.map"],"sourceRoot":""}