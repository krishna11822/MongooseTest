SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
IF OBJECT_ID('dbo.MsgAppSp') IS NOT NULL
    DROP PROCEDURE dbo.MsgAppSp
GO
-- This routine was converted from msg-app.i.  It takes the base message and
-- substitutes the input parms to come up with a final message.  The base
-- message is the object name of an actual message.  If the parms start with the
-- '@' character, then they are considered object names of actual messages
-- instead of literal strings.  Functions are not allowed when setting a default
-- value for input parameters, so NCHAR(1) appears as the funny character.

/* $Header: ApplicationDB\Stored Procedures\MsgAppSp.sp 10.1.0.1 03/30/2018 14:27:36 */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2018 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
***************************************************************
*/
/* $Archive: /Tools/SQLScripts/ApplicationDB/Stored Procedures/MsgAppSp.sp $
 *
 * CoreDev 10 248405 DJohnson Thu Oct 04
 * Add dbo. schema to path where missing.
 *
 * CoreDev 9 197640 Nthurn Thu Jul 02 15:07:09 2015
 * Use of MsgAppSp in a custom back-end session fails if site.lang_code is NULL and Usernames.LanguageCode is NULL
 * Correcly handle the situation where MessageLanguage Session Variable has a NULL value.  (Issue 197640)
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE dbo.MsgAppSp (
  @Infobar Infobar OUTPUT
, @BaseMsg Infobar
, @Parm1   Infobar = ''
, @Parm2   Infobar = ''
, @Parm3   Infobar = ''
, @Parm4   Infobar = ''
, @Parm5   Infobar = ''
, @Parm6   Infobar = ''
, @Parm7   Infobar = ''
, @Parm8   Infobar = ''
, @Parm9   Infobar = ''
, @Parm10  Infobar = ''
, @Parm11  Infobar = ''
, @Parm12  Infobar = ''
, @Parm13  Infobar = ''
, @Parm14  Infobar = ''
, @Parm15  Infobar = ''
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_MsgAppSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_MsgAppSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @Infobar OUTPUT
         , @BaseMsg
         , @Parm1
         , @Parm2
         , @Parm3
         , @Parm4
         , @Parm5
         , @Parm6
         , @Parm7
         , @Parm8
         , @Parm9
         , @Parm10
         , @Parm11
         , @Parm12
         , @Parm13
         , @Parm14
         , @Parm15
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
 
DECLARE
  @LocalInfo Infobar
, @Severity  INT
, @MessageLanguage MessageLanguageType

SET @Severity = 0

Exec @Severity = dbo.GetVariableSp
            N'MessageLanguage'    -- session var for the message language
            , N'1033'             -- Use enlish if session variable not defined
            , 0                  -- don't delete session variable
            , @MessageLanguage OUTPUT
            , @Infobar         OUTPUT

if @Severity <> 0
   return @Severity

SELECT
  @LocalInfo = ams.MessageText
, @Severity = omm.MessageSeverity
FROM ObjectMainMessages AS omm
INNER JOIN ApplicationMessages AS ams ON
  ams.MessageNo = omm.MessageNo
AND ams.MessageLanguage = @MessageLanguage
WHERE omm.MessageType = 5
AND omm.ObjectName = @BaseMsg

IF @LocalInfo IS NULL
   BEGIN
      -- Check for english version of the message if the translated does not exist
      if @MessageLanguage <> N'1033' OR @MessageLanguage IS NULL
         begin
            Set @MessageLanguage = N'1033' -- use english
            SELECT
              @LocalInfo = ams.MessageText
            , @Severity = omm.MessageSeverity
            FROM ObjectMainMessages AS omm
            INNER JOIN ApplicationMessages AS ams ON
              ams.MessageNo = omm.MessageNo
            AND ams.MessageLanguage = @MessageLanguage
            WHERE omm.MessageType = 5
            AND omm.ObjectName = @BaseMsg
         end
      if @LocalInfo is NULL
      begin
         SET @Infobar = 'Base message [' + @BaseMsg + '] is not defined.'
         RETURN 16
      end
   END

IF ISNULL(@Parm1, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm1, '&1')

IF ISNULL(@Parm2, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm2, '&2')

IF ISNULL(@Parm3, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm3, '&3')

IF ISNULL(@Parm4, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm4, '&4')

IF ISNULL(@Parm5, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm5, '&5')

IF ISNULL(@Parm6, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm6, '&6')

IF ISNULL(@Parm7, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm7, '&7')

IF ISNULL(@Parm8, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm8, '&8')

IF ISNULL(@Parm9, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm9, '&9')

IF ISNULL(@Parm10, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm10, '&A')

IF ISNULL(@Parm11, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm11, '&B')

IF ISNULL(@Parm12, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm12, '&C')

IF ISNULL(@Parm13, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm13, '&D')

IF ISNULL(@Parm14, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm14, '&E')

IF ISNULL(@Parm15, 'A') <> NCHAR(1)
    SET @LocalInfo = dbo.MsgAppSubSp (@LocalInfo, @Parm15, '&F')

IF @Infobar IS NOT NULL AND @Infobar <> ''
    SET @Infobar = @Infobar + NCHAR(13) + NCHAR(10) + NCHAR(13) + NCHAR(10)
SET @Infobar = ISNULL (@Infobar, '') +  ISNULL (@LocalInfo, ' ')

RETURN @Severity
GO

