SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ValidateNextKeyPairsSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[ValidateNextKeyPairsSp]
GO

/* $Header: /Tools/SQLScripts/Upgrade/PreUpgradeScripts/9.03.00_ValidateNextKeyPairsSp.sp 1     11/21/16 8:55a Djohnson $ */

/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
***************************************************************
*/

/* $Archive: /Tools/SQLScripts/Upgrade/PreUpgradeScripts/9.03.00_ValidateNextKeyPairsSp.sp $
 *
 * CoreDev 1 218600 Djohnson Fri Nov 18 15:24:40 2016
 * Redesign form to maintain current function without risk of SQL injection.
 * Issue #218600
 *
 * $NoKeywords: $
 */
-- Validate comma separated name=value pairs, where name is a variable name and value is either
-- a variable name or a literal.  Example, @x=N'y',@z=@z1

CREATE PROCEDURE dbo.ValidateNextKeyPairsSp (
  @Pairs   VeryLongListType
, @Infobar InfobarType   OUTPUT
) AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ValidateNextKeyPairsSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ValidateNextKeyPairsSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @Pairs
         , @Infobar OUTPUT

      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.

DECLARE
  @Severity INT
, @Literal  VeryLongListType
, @ParmPair VeryLongListType
, @Value1   VeryLongListType
, @Value2   VeryLongListType

SET @Severity = 0

IF @Pairs IS NULL
   RETURN 0

SET @Literal = REPLACE(@Pairs, N' OUTPUT', N' ')
SET @Literal = REPLACE(@Literal, N' ', N'')

DECLARE
  ParmCrs CURSOR LOCAL STATIC FOR
SELECT Element
FROM dbo.SplitString(N',', @Literal)

OPEN ParmCrs
WHILE @Severity = 0
BEGIN
   FETCH ParmCrs INTO @ParmPair

   IF @@FETCH_STATUS <> 0
      BREAK

   IF @ParmPair = N''
      CONTINUE

   IF dbo.NumEntries(@ParmPair, '=') != 2
   BEGIN
      SET @Severity = 16
      BREAK
   END
   SET @Value1 = dbo.Entry(1, @ParmPair, N'=')
   SET @Value2 = dbo.Entry(2, @ParmPair, N'=')

   IF dbo.IsValidVarName(@Value1) = 0
   BEGIN
      SET @Severity = 16
      BREAK
   END

   IF dbo.IsValidVarName(@Value2) = 0 AND dbo.IsValidLiteral(@Value2) = 0
   BEGIN
      SET @Severity = 16
      BREAK
   END

END
CLOSE ParmCrs
DEALLOCATE ParmCrs

IF @Severity <> 0
BEGIN
   EXEC @Severity = MsgAppSp
     @Infobar OUTPUT
   , 'E=NextKeyValidator3'
   , @Pairs
END

RETURN @Severity

GO
