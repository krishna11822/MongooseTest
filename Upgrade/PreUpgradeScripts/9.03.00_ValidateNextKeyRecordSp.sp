SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[ValidateNextKeyRecordSp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[ValidateNextKeyRecordSp]
GO


/* $Header: /Tools/SQLScripts/Upgrade/PreUpgradeScripts/9.03.00_ValidateNextKeyRecordSp.sp 1     11/21/16 8:55a Djohnson $ */

/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
***************************************************************
*/

/* $Archive: /Tools/SQLScripts/Upgrade/PreUpgradeScripts/9.03.00_ValidateNextKeyRecordSp.sp $
 *
 * CoreDev 1 218600 Djohnson Fri Nov 18 15:25:14 2016
 * Redesign form to maintain current function without risk of SQL injection.
 * Issue #218600
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE dbo.ValidateNextKeyRecordSp (
  @Prefix       NextKeyPrefixListType
, @Generator    LongListType
, @Length       NextKeyLengthExprType
, @PostGenerate LongListType
, @AddlParms    LongListType
, @AddlKeys     LongListType
, @Partition    LongListType
, @TableName    SYSNAME
, @Infobar      InfobarType OUTPUT
) AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ValidateNextKeyRecordSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ValidateNextKeyRecordSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
           @Prefix
         , @Generator
         , @Length
         , @PostGenerate
         , @AddlParms
         , @AddlKeys
         , @Partition
         , @TableName
         , @Infobar OUTPUT

      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.

DECLARE
  @Severity     INT

SET @Severity = 0

IF @Severity = 0 AND @Prefix IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyPrefixSp
     @PrefixList = @Prefix
   , @Infobar    = @Infobar OUTPUT
END

IF @Severity = 0 AND @Generator IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyGeneratorSp
     @NextKeyGenerator = @Generator
   , @Infobar          = @Infobar OUTPUT
END

IF @Severity = 0 AND @Length IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyLengthSp
     @NextKeyLength = @Length
   , @Infobar       = @Infobar OUTPUT
END

IF @Severity = 0 AND @PostGenerate IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyPairsSp
     @Pairs   = @PostGenerate
   , @Infobar = @Infobar OUTPUT
END

IF @Severity = 0 AND @AddlParms IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyPairsSp
     @Pairs   = @AddlParms
   , @Infobar = @Infobar OUTPUT
END

IF @Severity = 0 AND @AddlKeys IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyAddKeysSp
     @TableName  = @TableName
   , @ColumnList = @AddlKeys
   , @Infobar    = @Infobar OUTPUT
END

IF @Severity = 0 AND @Partition IS NOT NULL
BEGIN
   EXEC @Severity = ValidateNextKeyPairsSp
     @Pairs   = @Partition
   , @Infobar = @Infobar OUTPUT
END

--  Add table name to error message.
IF @Severity <> 0
BEGIN
   EXEC MsgAppSp @Infobar OUTPUT
    , 'I=TableName'
    , @TableName
END

RETURN @Severity

GO
